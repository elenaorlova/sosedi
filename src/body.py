import telebot as tb
from telebot import types
import config
import time
# import sqlite3
import psycopg2
import datetime

import db_obj
from db_obj import *


def main():
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–æ—Ç—É
    bot = tb.TeleBot(config.TOKEN)
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∞–∑—É
    # conn = sqlite3.connect('db/database', check_same_thread=False)
    # conn = psycopg2.connect(dbname="sosedi", user='p1', password='123', port=5435)
    # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏
    # cursor = conn.cursor()
    stop_text = ['–Ω–µ—Ç', '–≤—ã—Ö–æ–¥', '–≤—ã–π—Ç–∏', '–º–µ–Ω—é', '/menu', '/region', '/start', '—Å–¥–∞—Ç—å', '—Å–Ω—è—Ç—å', '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ '
                                                                                                  '–æ–±—å—è–≤–ª–µ–Ω–∏—è',
                 '/notification']

    # –ß–µ–∫–∞–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–æ–ø —Å–ª–æ–≤
    def check_stop_text(mes):
        if mes.text is not None and mes.text.lower() in stop_text:
            return True

    # –ß–µ–∫–∞–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ @—é–∑–µ—Ä–Ω–µ–π–º–∞
    def check_username(message):
        if message.from_user.username is None:
            t = '–Ø –∑–∞–º–µ—Ç–∏–ª, —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç (@ username)! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞. ' \
                '–ë–µ–∑ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞ –Ω–µ —Å–º–æ–≥—É—Ç —Å —Ç–æ–±–æ–π –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å üòî\n\n–ö–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏—à—å, –ø–∏—à–∏ /start –∏ ' \
                '–ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ üëå'
            bot.send_message(message.chat.id, t)
            return 0
        else:
            return message

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    def main_menu(message, t):
        keyboard_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_menu = ['–°–¥–∞—Ç—å', '–ú–µ–Ω—é', '–°–Ω—è—Ç—å', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –æ–±—å—è–≤–ª–µ–Ω–∏—è']
        keyboard_main.add(button_menu[0], button_menu[1], button_menu[2])
        # keyboard_main.add(button_menu[3])
        bot.send_message(message.chat.id, t, parse_mode='html', reply_markup=keyboard_main)

        markup = types.InlineKeyboardMarkup()
        key1 = types.InlineKeyboardButton('–°–¥–∞—Ç—å —Ç–æ–≤–∞—Ä –≤ –∞—Ä–µ–Ω–¥—É', callback_data='1')
        key2 = types.InlineKeyboardButton('–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', callback_data='2')
        key3 = types.InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –º–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è',
                                          callback_data='3')
        key4 = types.InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ —Å–¥–∞—á–µ',
                                          callback_data='11')
        key5 = types.InlineKeyboardButton(
            '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ –ø–æ–∏—Å–∫–µ', callback_data='77')
        # key6 = types.InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø–æ–∏—Å–∫–µ', callback_data='search')

        markup.row(key1)
        markup.row(key2)
        markup.row(key3)
        markup.row(key4)
        markup.row(key5)
        # markup.row(key6)

        msg = bot.send_message(message.chat.id,
                               '–í—ã–±–µ—Ä–∏, —á—Ç–æ –º—ã –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è:', parse_mode='html', reply_markup=markup)
        return msg

    def how_many_obj(category, u_id):
        ur = user.select(user.user_region).where(user.user_id == u_id)

        res = obj.select(fn.count(obj.category)).where((obj.category == category) & (obj.region == ur)
                                                       & obj.money_cat1.is_null(False) & obj.photo.is_null(False)
                                                       & obj.cat_1.is_null(False)).get()

        # cursor.execute(
        #     'SELECT COUNT(category) FROM obj WHERE category = ? '
        #     'AND region = (SELECT user_region FROM user WHERE user_id = ?)',
        #     (category, u_id,))

        how_many = ((str(res.count)).split(',')[0]).strip('(')
        # print(how_many)
        if how_many == '0':
            return ' '
        else:
            how_many = ' (' + how_many + ')'
            return how_many

    # ------------------------------–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è------------------------------------------------
    def db_table_val(user_id: int, user_name: str, user_region: str, user_registration: int, chat_id: int,
                     d: str):
        u = user.get_or_none((user.chat_id == chat_id) & (user.user_id == user_id))
        if u is None:
            user.create(user_id=user_id, user_name=user_name, user_region=user_region,
                        user_registration=user_registration, chat_id=chat_id, datetime=d)
        else:
            u.user_name = user_name
            u.user_region = user_region
            u.user_registration = user_registration
            user.datetime = d
            u.save()
        # cursor.execute('INSERT OR REPLACE INTO user (user_id, user_name, user_region, user_registration, '
        #                'chat_id, datetime) VALUES (?, ?, ?, ?, ?, ?)',
        #                (user_id, user_name, user_region, user_registration, chat_id, d))
        # conn.commit()

    # --------------------------------------–û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î–´ –°–¢–ê–†–¢----------------------------------------------------
    @bot.message_handler(commands=['start'])
    def welcome(message):
        # ------------------------–ü–†–û–í–ï–†–ö–ê –ù–ê –ù–ê–õ–ò–ß–ò–ï –í –ë–î –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø------------------------
        if check_username(message) == 0:
            pass
        else:
            print(message)
            u_id = message.from_user.id
            # info = cursor.execute('SELECT * FROM user WHERE user_id=? AND user_region NOT LIKE ?',
            #                       (u_id, '%undefined%',))
            info = user.get_or_none((user.user_id == u_id) & (~(user.user_region.contains('undefined'))))
            if info is None:
                msg = bot.send_message(message.chat.id,
                                       '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n' +
                                       '–£–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –≥–æ—Ä–æ–¥.', timeout=10)
                if msg.text:
                    bot.register_next_step_handler(msg, check_city)
            else:
                u_name = message.from_user.first_name
                t = '–ß–µ–º –∑–∞–π–º–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è, {}?'.format(u_name)
                main_menu(message, t)

    # notification
    @bot.message_handler(commands=['notification'])
    def notification(message):
        return apply(message)

    # ----------------------APPLY() - –û –°–û–ì–õ–ê–°–ò–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô--------------------------------
    def apply(message):
        markup = types.InlineKeyboardMarkup()
        key1 = types.InlineKeyboardButton(
            '–¢–æ–ª—å–∫–æ –≤ –º–æ—ë–º —Ä–∞–π–æ–Ω–µ',
            callback_data='Yes')
        key2 = types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–π–æ–Ω–æ–≤',
                                          callback_data='Yes+')
        key3 = types.InlineKeyboardButton('–Ø –Ω–µ —Ö–æ—á—É –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
                                          callback_data='No')

        markup.row(key1)
        markup.row(key2)
        markup.row(key3)
        key = bot.send_message(message.chat.id,
                               '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–Ω—è—Ç–Ω–∞! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —è –ø–æ–º–æ–≥–∞—é —Å–æ—Å–µ–¥—è–º –Ω–∞–π—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–µ—â–∏. ' +
                               '–ï—Å–ª–∏ —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –≤ –∞—Ä–µ–Ω–¥—É, —è –º–æ–≥—É —Å–æ–æ–±—â–∏—Ç—å,' +
                               '–∫–æ–≥–¥–∞ —Ç–≤–æ–∏–º —Å–æ—Å–µ–¥—è–º —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è. ' +
                               '–ú–æ–∂–Ω–æ?) '.format(message.from_user, bot.get_me()), parse_mode='html',
                               reply_markup=markup, timeout=10)
        return key

    # ------------------–ü–û–õ–ù–ê–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –í –ë–î –ü–û–°–õ–ï –¢–û–ì–û –ö–ê–ö –û–ù –í–í–ï–î–ï–¢ –†–ï–ì–ò–û–ù------------------------
    def region(message):
        u_id = message.from_user.id
        chat_id = message.chat.id
        u_name = "@" + message.from_user.username
        u_region = message.text
        get_reg = ["–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π", "–ê–ª–µ–∫—Å–µ–µ–≤—Å–∫–∏–π", "–ê–ª—Ç—É—Ñ—å–µ–≤—Å–∫–∏–π", "–ê—Ä–±–∞—Ç", "–ê—ç—Ä–æ–ø–æ—Ä—Ç",
                   "–ë–∞–±—É—à–∫–∏–Ω—Å–∫–∏–π", "–ë–∞—Å–º–∞–Ω–Ω—ã–π", "–ë–µ–≥–æ–≤–æ–π", "–ë–µ—Å–∫—É–¥–Ω–∏–∫–æ–≤—Å–∫–∏–π", "–ë–∏–±–∏—Ä–µ–≤–æ",
                   "–ë–∏—Ä—é–ª—ë–≤–æ –≤–æ—Å—Ç–æ—á–Ω–æ–µ", "–ë–∏—Ä—é–ª—ë–≤–æ –∑–∞–ø–∞–¥–Ω–æ–µ", "–ë–æ–≥–æ—Ä–æ–¥—Å–∫–æ–µ", "–ë—Ä–∞—Ç–µ–µ–≤–æ",
                   "–ë—É—Ç–æ–≤–æ", "–ë—É—Ç—ã—Ä—Å–∫–∏–π", "–ë–∞–ª–∞—à–∏—Ö–∞", "–í–µ—à–Ω—è–∫–∏",
                   "–í–Ω—É–∫–æ–≤–æ", "–í–æ–π–∫–æ–≤—Å–∫–∏–π", "–í–æ—Å—Ç–æ—á–Ω—ã–π", "–í—ã—Ö–∏–Ω–æ-–∂—É–ª–µ–±–∏–Ω–æ", "–í–∏–¥–Ω–æ–µ", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—Å–∫", "–ì–∞–≥–∞—Ä–∏–Ω—Å–∫–∏–π",
                   "–ì–æ–ª–æ–≤–∏–Ω—Å–∫–∏–π", "–ì–æ–ª—å—è–Ω–æ–≤–æ", "–î–∞–Ω–∏–ª–æ–≤—Å–∫–∏–π", "–î–µ–≥—É–Ω–∏–Ω–æ –≤–æ—Å—Ç–æ—á–Ω–æ–µ", "–î–µ–≥—É–Ω–∏–Ω–æ –∑–∞–ø–∞–¥–Ω–æ–µ",
                   "–î–º–∏—Ç—Ä–æ–≤—Å–∫–∏–π", "–î–æ–Ω—Å–∫–æ–π", "–î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ", "–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π", "–î–º–∏—Ç—Ä–æ–≤", "–î–æ–ª–≥–æ–ø—Ä—É–¥–Ω—ã–π", "–î–æ–º–æ–¥–µ–¥–æ–≤–æ",
                   "–î—É–±–Ω–∞", "–ï–≥–æ—Ä—å–µ–≤—Å–∫", "–ñ—É–∫–æ–≤—Å–∫–∏–π", "–ó–∞–º–æ—Å–∫–≤–æ—Ä–µ—á—å–µ", "–ó–µ–ª–µ–Ω–æ–≥—Ä–∞–¥",
                   "–ó—é–∑–∏–Ω–æ", "–ó—è–±–ª–∏–∫–æ–≤–æ", "–ò–≤–∞–Ω–æ–≤—Å–∫–æ–µ", "–ò–∑–º–∞–π–ª–æ–≤–æ –≤–æ—Å—Ç–æ—á–Ω–æ–µ", "–ò–∑–º–∞–π–ª–æ–≤–æ",
                   "–ò–∑–º–∞–π–ª–æ–≤–æ —Å–µ–≤–µ—Ä–Ω–æ–µ", "–ò–≤–∞–Ω—Ç–µ–µ–≤–∫–∞", "–ö–∞–ø–æ—Ç–Ω—è", "–ö–æ–Ω—å–∫–æ–≤–æ", "–ö–æ–ø—Ç–µ–≤–æ", "–ö–æ—Å–∏–Ω–æ-—É—Ö—Ç–æ–º—Å–∫–∏–π",
                   "–ö–æ—Ç–ª–æ–≤–∫–∞", "–ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∏–π", "–ö—Ä—ã–ª–∞—Ç—Å–∫–æ–µ", "–ö—Ä—é–∫–æ–≤–æ", "–ö—É–∑—å–º–∏–Ω–∫–∏",
                   "–ö—É–Ω—Ü–µ–≤–æ", "–ö—É—Ä–∫–∏–Ω–æ", "–ö–æ—Ä–æ–ª—ë–≤", "–ö–ª–∏–Ω", "–ö–æ–ª–æ–º–Ω–∞", "–ö–æ—Ç–µ–ª—å–Ω–∏–∫–∏", "–ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫",
                   "–õ–µ–≤–æ–±–µ—Ä–µ–∂–Ω—ã–π", "–õ–µ—Ñ–æ—Ä—Ç–æ–≤–æ", "–õ–∏–∞–Ω–æ–∑–æ–≤–æ", "–õ–æ–º–æ–Ω–æ—Å–æ–≤—Å–∫–∏–π", "–õ–æ–±–Ω—è", "–õ–æ—Å–∏–Ω–æ-–ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π",
                   "–õ—ã—Ç–∫–∞—Ä–∏–Ω–æ", "–õ—é–±–µ—Ä—Ü—ã", "–õ–æ—Å–∏–Ω–æ–æ—Å—Ç—Ä–æ–≤—Å–∫–∏–π", "–õ—é–±–ª–∏–Ω–æ", "–ú–∞—Ä—Ñ–∏–Ω–æ", "–ú–∞—Ä—å–∏–Ω–∞ —Ä–æ—â–∞", "–ú–∞—Ä—å–∏–Ω–æ",
                   "–ú–∞—Ç—É—à–∫–∏–Ω–æ", "–ú–µ–¥–≤–µ–¥–∫–æ–≤–æ", "–ú–µ—Ç—Ä–æ–≥–æ—Ä–æ–¥–æ–∫",
                   "–ú–µ—â–∞–Ω—Å–∫–∏–π", "–ú–∏—Ç–∏–Ω–æ", "–ú–æ–∂–∞–π—Å–∫–∏–π", "–ú–æ–ª–∂–∞–Ω–∏–Ω–æ–≤—Å–∫–∏–π", "–ú–æ—Å–∫–≤–æ—Ä–µ—á—å–µ-—Å–∞–±—É—Ä–æ–≤–æ", "–ú—ã—Ç–∏—â–∏",
                   "–ù–∞–≥–∞—Ç–∏–Ω–æ-—Å–∞–¥–æ–≤–Ω–∏–∫–∏", "–ù–∞–≥–∞—Ç–∏–Ω—Å–∫–∏–π –∑–∞—Ç–æ–Ω", "–ù–∞–≥–æ—Ä–Ω—ã–π", "–ù–µ–∫—Ä–∞—Å–æ–≤–∫–∞",
                   "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∏–π", "–ù–æ–≤–æ-–ø–µ—Ä–µ–¥–µ–ª–∫–∏–Ω–æ", "–ù–æ–≤–æ–≥–∏—Ä–µ–µ–≤–æ", "–ù–æ–≤–æ–∫–æ—Å–∏–Ω–æ", "–ù–∞—Ä–æ-—Ñ–æ–º–∏–Ω—Å–∫", "–ù–æ–≥–∏–Ω—Å–∫",
                   "–û–±—Ä—É—á–µ–≤—Å–∫–∏–π", "–û—Ä–µ—Ö–æ–≤–æ-–±–æ—Ä–∏—Å–æ–≤–æ —Å–µ–≤–µ—Ä–Ω–æ–µ", "–û—Ä–µ—Ö–æ–≤–æ-–±–æ—Ä–∏—Å–æ–≤–æ —é–∂–Ω–æ–µ",
                   "–û—Å—Ç–∞–Ω–∫–∏–Ω—Å–∫–∏–π", "–û—Ç—Ä–∞–¥–Ω–æ–µ", "–û—á–∞–∫–æ–≤–æ-–º–∞—Ç–≤–µ–µ–≤—Å–∫–æ–µ", "–û–¥–∏–Ω—Ü–æ–≤–æ", "–û—Ä–µ—Ö–æ–≤–æ-–∑—É–µ–≤–æ",
                   "–ü–µ—Ä–æ–≤–æ", "–ü–µ—á–∞—Ç–Ω–∏–∫–∏", "–ü–æ–¥–æ–ª—å—Å–∫", "–ü—É—à–∫–∏–Ω–æ",
                   "–ü–æ–∫—Ä–æ–≤—Å–∫–æ–µ-—Å—Ç—Ä–µ—à–Ω–µ–≤–æ", "–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–æ–µ", "–ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∏–π", "–ü—Ä–æ—Å–ø–µ–∫—Ç –≤–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ",
                   "–†–∞–º–µ–Ω–∫–∏", "–†–æ—Å—Ç–æ–∫–∏–Ω–æ", "–†—è–∑–∞–Ω—Å–∫–∏–π", "–†–∞–º–µ–Ω—Å–∫–æ–µ", "–†–µ—É—Ç–æ–≤", "–°–∞–≤—ë–ª–∫–∏", "–°–∞–≤—ë–ª–æ–≤—Å–∫–∏–π", "–°–≤–∏–±–ª–æ–≤–æ",
                   "–°–µ–≤–µ—Ä–Ω—ã–π", "–°–∏–ª–∏–Ω–æ", "–°–æ–∫–æ–ª", "–°–æ–∫–æ–ª–∏–Ω–∞—è –≥–æ—Ä–∞", "–°–æ–∫–æ–ª—å–Ω–∏–∫–∏", "–°–æ–ª–Ω—Ü–µ–≤–æ",
                   "–°—Ç–∞—Ä–æ–µ –∫—Ä—é–∫–æ–≤–æ", "–°—Ç—Ä–æ–≥–∏–Ω–æ", "–°–µ—Ä–≥–∏–µ–≤ –ø–æ—Å–∞–¥", "–°–µ—Ä–ø—É—Ö–æ–≤", "–°—Ç—É–ø–∏–Ω–æ",
                   "–¢–∞–≥–∞–Ω—Å–∫–∏–π", "–¢–≤–µ—Ä—Å–∫–æ–π", "–¢–µ–∫—Å—Ç–∏–ª—å—â–∏–∫–∏", "–¢—ë–ø–ª—ã–π —Å—Ç–∞–Ω", "–¢—Ä–æ–∏—Ü–∫",
                   "–¢–∏–º–∏—Ä—è–∑–µ–≤—Å–∫–∏–π", "–¢—Ä–æ–ø–∞—Ä—ë–≤–æ-–Ω–∏–∫—É–ª–∏–Ω–æ", "–¢—É—à–∏–Ω–æ —Å–µ–≤–µ—Ä–Ω–æ–µ", "–¢—É—à–∏–Ω–æ —é–∂–Ω–æ–µ",
                   "–§–∏–ª—ë–≤—Å–∫–∏–π –ø–∞—Ä–∫", "–§–∏–ª–∏-–¥–∞–≤—ã–¥–∫–æ–≤–æ", "–§—Ä—è–∑–∏–Ω–æ", "–•–∞–º–æ–≤–Ω–∏–∫–∏", "–•–æ–≤—Ä–∏–Ω–æ", "–•–æ—Ä–æ—à—ë–≤–æ-–º–Ω–µ–≤–Ω–∏–∫–∏", "–•–∏–º–∫–∏",
                   "–•–æ—Ä–æ—à—ë–≤—Å–∫–∏–π", "–¶–∞—Ä–∏—Ü—ã–Ω–æ", "–ß–µ—Ä—ë–º—É—à–∫–∏", "–ß–µ—Ä—Ç–∞–Ω–æ–≤–æ", "–ß–µ—Ö–æ–≤", "–©—É–∫–∏–Ω–æ", "–©—ë–ª–∫–æ–≤–æ", "–©–µ—Ä–±–∏–Ω–∫–∞",
                   "–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å", "–Æ–∂–Ω–æ–ø–æ—Ä—Ç–æ–≤—ã–π", "–Ø–∫–∏–º–∞–Ω–∫–∞", "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π", "–Ø—Å–µ–Ω–µ–≤–æ"]

        for x in get_reg:
            if u_region.lower() == x.lower():
                date = (str(datetime.datetime.now().today()))[:16]
                db_table_val(user_id=u_id, user_name=u_name, user_region=x, user_registration=3, chat_id=chat_id,
                             d=date)
                apply(message)
                break
        else:
            t = '–ù–µ –Ω–∞—à—ë–ª —Ç–≤–æ–π —Ä–µ–≥–∏–æ–Ω, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑. –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–π–æ–Ω–æ–≤:\n\n{}'.format('\n'.join(get_reg))
            msg = bot.send_message(message.chat.id, t, timeout=10)
            bot.register_next_step_handler(msg, region)

    def check_city(message):
        city = ['–º–æ—Å–∫–≤–∞', '–º–æ—Å–∫–≤–ø', '–º–∞—Å–∫–≤–∞', '–º–º–∞—Å–∫–≤–∞', '–º—Å–∫', '–º–æ—Å–∫–æ—É', 'moscow', 'mocscow', 'msc']
        city_korolev = ['–∫–æ—Ä–æ–ª–µ–≤', '–∫–æ—Ä–æ–ª—ë–≤', '–∫–æ—Ä–æ–ª—å', '–∫–∞—Ä–æ–ª—ë–≤', '–∫–∞—Ä–æ–ª–µ–≤']
        other_city = ['–º—ã—Ç–∏—â–∏', '–∑–µ–ª–µ–Ω–æ–≥—Ä–∞–¥', '–∂—É–∫–æ–≤—Å–∫–∏–π', '–æ–¥–∏–Ω—Ü–æ–≤–æ', '–±–∞–ª–∞—à–∏—Ö–∞', '–≤–∏–¥–Ω–æ–µ', '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—Å–∫',
                      '–¥–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π', '–¥–º–∏—Ç—Ä–æ–≤', '–¥–æ–ª–≥–æ–ø—Ä—É–¥–Ω—ã–π', '–¥–æ–º–æ–¥–µ–¥–æ–≤–æ', '–¥—É–±–Ω–∞', '–µ–≥–æ—Ä—å–µ–≤—Å–∫',
                      '–∏–≤–∞–Ω—Ç–µ–µ–≤–∫–∞', '–∫–ª–∏–Ω', '–∫–æ–ª–æ–º–Ω–∞', '–∫–æ—Ç–µ–ª—å–Ω–∏–∫–∏', '–∫—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫', '–ª–æ–±–Ω—è', '–ª–æ—Å–∏–Ω–æ-–ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π',
                      '–ª—ã—Ç–∫–∞—Ä–∏–Ω–æ', '–ª—é–±–µ—Ä—Ü—ã', '–Ω–∞—Ä–æ-—Ñ–æ–º–∏–Ω—Å–∫', '–Ω–æ–≥–∏–Ω—Å–∫', '–æ—Ä–µ—Ö–æ–≤–æ-–∑—É–µ–≤–æ',
                      '–ø–æ–¥–æ–ª—å—Å–∫', '–ø—É—à–∫–∏–Ω–æ', '—Ä–∞–º–µ–Ω—Å–∫–æ–µ', '—Ä–µ—É—Ç–æ–≤', '—Å–µ—Ä–≥–∏–µ–≤ –ø–æ—Å–∞–¥', '—Å–µ—Ä–ø—É—Ö–æ–≤', '—Å—Ç—É–ø–∏–Ω–æ', '—Ç—Ä–æ–∏—Ü–∫',
                      '—Ñ—Ä—è–∑–∏–Ω–æ', '—Ö–∏–º–∫–∏', '—á–µ—Ö–æ–≤', " —â—ë–ª–∫–æ–≤–æ", '—ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å']

        if message.text.lower() in city:
            msg = bot.send_message(message.chat.id,
                                   '–£–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π —Ä–∞–π–æ–Ω, —á—Ç–æ–±—ã —è –º–æ–≥ –ø–æ–¥–∫–ª—é—á–∏—Ç—å ' +
                                   '—Ç–µ–±—è –∫ –¥—Ä—É–∂–Ω–æ–π —Å–µ—Ç–∏ —Å–æ—Å–µ–¥–µ–π üòâ', timeout=10)
            return bot.register_next_step_handler(msg, region)

        if message.text.lower() in city_korolev:
            u_id = message.from_user.id
            chat_id = message.chat.id
            u_name = "@" + message.from_user.username
            u_region = '–ö–æ—Ä–æ–ª—ë–≤'
            date = (str(datetime.datetime.now().today()))[:16]
            db_table_val(user_id=u_id, user_name=u_name, user_region=u_region, user_registration=2, chat_id=chat_id,
                         d=date)
            # cursor.execute("UPDATE 'user' SET 'search_message' = user_region WHERE user_id = ?", (u_id,))
            # conn.commit()
            # t = '–°—É–ø–µ—Ä! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–∏—Å–∫–µ –≤ —Ç–≤–æ–µ–º —Ä–∞–π–æ–Ω–µ, –∞ –ø–æ–∫–∞...'
            return apply(message)

        if message.text.lower() in other_city:
            u_id = message.from_user.id
            chat_id = message.chat.id
            u_name = "@" + message.from_user.username
            u_region = message.text.title()
            date = (str(datetime.datetime.now().today()))[:16]
            db_table_val(user_id=u_id, user_name=u_name, user_region=u_region, user_registration=2, chat_id=chat_id,
                         d=date)
            # cursor.execute("UPDATE 'user' SET 'search_message' = user_region WHERE user_id = ?", (u_id,))
            # conn.commit()
            # t = '–°—É–ø–µ—Ä! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–∏—Å–∫–µ –≤ —Ç–≤–æ–µ–º —Ä–∞–π–æ–Ω–µ, –∞ –ø–æ–∫–∞...'
            return apply(message)
        else:
            u_id = message.from_user.id
            chat_id = message.chat.id
            u_name = "@" + message.from_user.username
            u_region = 'undefined_' + message.text.lower()
            date = (str(datetime.datetime.now().today()))[:16]
            db_table_val(user_id=u_id, user_name=u_name, user_region=u_region, user_registration=1, chat_id=chat_id,
                         d=date)
            with open("city.txt", "a") as file:
                file.write('-' + message.text + '\n')
                file.close()
            bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –°–æ—Å–µ–¥–∏ –ø–æ–∫–∞ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—Ç —Ç–æ–ª—å–∫–æ –ú–æ—Å–∫–≤—É –∏ –ú–æ—Å–∫–æ–≤—Å–∫—É—é '
                                              '–æ–±–ª–∞—Å—Ç—å. '
                                              '\n\n–ï—Å–ª–∏ —Ç—ã –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏, —Ç–æ –Ω–∞–ø–∏—à–∏ /start –∏ –ø–æ–ø—Ä–æ–±—É–π '
                                              '–≤–≤–µ—Å—Ç–∏ '
                                              ' –≥–æ—Ä–æ–¥ –∑–∞–Ω–æ–≤–æ.\n\n'
                                              '–í –ª—é–±–æ–º —Å–ª—É—á–∞–µ, —è –∑–∞–ø–æ–º–Ω–∏–ª —Ç–≤–æ–π –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –º—ã —Å–∫–æ—Ä–µ–µ –º–æ–≥–ª–∏ '
                                              '–≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è!\n '
                                              '\n–ê –ø–æ–∫–∞ —Å–ª–µ–¥–∏ –∑–∞ –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ Instagram:\n'
                                              'https://instagram.com/sosedi.sharing', timeout=10)

    # ------------------------–û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î–´ –ú–ï–ù–Æ--------------------------------------------
    @bot.message_handler(commands=['menu'])
    def get_menu(message):
        info = user.get_or_none((user.user_id == message.from_user.id) & ~(user.user_region.contains('undefined')))
        if check_username(message) == 0:
            pass
        elif info is None:
            msg = bot.send_message(message.chat.id,
                                   '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n' +
                                   '–£–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –≥–æ—Ä–æ–¥.')
            if msg.text:
                bot.register_next_step_handler(msg, check_city)
        else:
            t = '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ–Ω—é...'
            main_menu(message, t)

    # ------------------------–û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î–´ –°–ú–ï–ù–ò–¢–¨ –†–ï–ì–ò–û–ù----------------------------------
    @bot.message_handler(commands=['region'])
    def change_region(message):
        if check_username(message) == 0:
            pass
        else:
            # info = cursor.execute('SELECT * FROM user WHERE user_id=? AND user_region LIKE ?',
            #                       (message.from_user.id, '%undefined%',))
            info = user.get_or_none((user.user_id == message.from_user.id) & (user.user_region ** '%undefined%'))
            if info is None:
                t = '–•–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Å–≤–æ–π —Ä–∞–π–æ–Ω? –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–π–æ–Ω–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: –°–µ–≤–µ—Ä–Ω—ã–π'
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, change_user_region)
            else:
                return welcome(message)

    def change_user_region(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        u_region = message.text
        u_id = message.from_user.id
        get_reg = ["–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π", "–ê–ª–µ–∫—Å–µ–µ–≤—Å–∫–∏–π", "–ê–ª—Ç—É—Ñ—å–µ–≤—Å–∫–∏–π", "–ê—Ä–±–∞—Ç", "–ê—ç—Ä–æ–ø–æ—Ä—Ç",
                   "–ë–∞–±—É—à–∫–∏–Ω—Å–∫–∏–π", "–ë–∞—Å–º–∞–Ω–Ω—ã–π", "–ë–µ–≥–æ–≤–æ–π", "–ë–µ—Å–∫—É–¥–Ω–∏–∫–æ–≤—Å–∫–∏–π", "–ë–∏–±–∏—Ä–µ–≤–æ",
                   "–ë–∏—Ä—é–ª—ë–≤–æ –≤–æ—Å—Ç–æ—á–Ω–æ–µ", "–ë–∏—Ä—é–ª—ë–≤–æ –∑–∞–ø–∞–¥–Ω–æ–µ", "–ë–æ–≥–æ—Ä–æ–¥—Å–∫–æ–µ", "–ë—Ä–∞—Ç–µ–µ–≤–æ",
                   "–ë—É—Ç–æ–≤–æ", "–ë—É—Ç—ã—Ä—Å–∫–∏–π", "–ë–∞–ª–∞—à–∏—Ö–∞", "–í–µ—à–Ω—è–∫–∏",
                   "–í–Ω—É–∫–æ–≤–æ", "–í–æ–π–∫–æ–≤—Å–∫–∏–π", "–í–æ—Å—Ç–æ—á–Ω—ã–π", "–í—ã—Ö–∏–Ω–æ-–∂—É–ª–µ–±–∏–Ω–æ", "–í–∏–¥–Ω–æ–µ", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—Å–∫", "–ì–∞–≥–∞—Ä–∏–Ω—Å–∫–∏–π",
                   "–ì–æ–ª–æ–≤–∏–Ω—Å–∫–∏–π", "–ì–æ–ª—å—è–Ω–æ–≤–æ", "–î–∞–Ω–∏–ª–æ–≤—Å–∫–∏–π", "–î–µ–≥—É–Ω–∏–Ω–æ –≤–æ—Å—Ç–æ—á–Ω–æ–µ", "–î–µ–≥—É–Ω–∏–Ω–æ –∑–∞–ø–∞–¥–Ω–æ–µ",
                   "–î–º–∏—Ç—Ä–æ–≤—Å–∫–∏–π", "–î–æ–Ω—Å–∫–æ–π", "–î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ", "–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π", "–î–º–∏—Ç—Ä–æ–≤", "–î–æ–ª–≥–æ–ø—Ä—É–¥–Ω—ã–π", "–î–æ–º–æ–¥–µ–¥–æ–≤–æ",
                   "–î—É–±–Ω–∞", "–ï–≥–æ—Ä—å–µ–≤—Å–∫", "–ñ—É–∫–æ–≤—Å–∫–∏–π", "–ó–∞–º–æ—Å–∫–≤–æ—Ä–µ—á—å–µ", "–ó–µ–ª–µ–Ω–æ–≥—Ä–∞–¥",
                   "–ó—é–∑–∏–Ω–æ", "–ó—è–±–ª–∏–∫–æ–≤–æ", "–ò–≤–∞–Ω–æ–≤—Å–∫–æ–µ", "–ò–∑–º–∞–π–ª–æ–≤–æ –≤–æ—Å—Ç–æ—á–Ω–æ–µ", "–ò–∑–º–∞–π–ª–æ–≤–æ",
                   "–ò–∑–º–∞–π–ª–æ–≤–æ —Å–µ–≤–µ—Ä–Ω–æ–µ", "–ò–≤–∞–Ω—Ç–µ–µ–≤–∫–∞", "–ö–∞–ø–æ—Ç–Ω—è", "–ö–æ–Ω—å–∫–æ–≤–æ", "–ö–æ–ø—Ç–µ–≤–æ", "–ö–æ—Å–∏–Ω–æ-—É—Ö—Ç–æ–º—Å–∫–∏–π",
                   "–ö–æ—Ç–ª–æ–≤–∫–∞", "–ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∏–π", "–ö—Ä—ã–ª–∞—Ç—Å–∫–æ–µ", "–ö—Ä—é–∫–æ–≤–æ", "–ö—É–∑—å–º–∏–Ω–∫–∏",
                   "–ö—É–Ω—Ü–µ–≤–æ", "–ö—É—Ä–∫–∏–Ω–æ", "–ö–æ—Ä–æ–ª—ë–≤", "–ö–ª–∏–Ω", "–ö–æ–ª–æ–º–Ω–∞", "–ö–æ—Ç–µ–ª—å–Ω–∏–∫–∏", "–ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫",
                   "–õ–µ–≤–æ–±–µ—Ä–µ–∂–Ω—ã–π", "–õ–µ—Ñ–æ—Ä—Ç–æ–≤–æ", "–õ–∏–∞–Ω–æ–∑–æ–≤–æ", "–õ–æ–º–æ–Ω–æ—Å–æ–≤—Å–∫–∏–π", "–õ–æ–±–Ω—è", "–õ–æ—Å–∏–Ω–æ-–ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π",
                   "–õ—ã—Ç–∫–∞—Ä–∏–Ω–æ", "–õ—é–±–µ—Ä—Ü—ã", "–õ–æ—Å–∏–Ω–æ–æ—Å—Ç—Ä–æ–≤—Å–∫–∏–π", "–õ—é–±–ª–∏–Ω–æ", "–ú–∞—Ä—Ñ–∏–Ω–æ", "–ú–∞—Ä—å–∏–Ω–∞ —Ä–æ—â–∞", "–ú–∞—Ä—å–∏–Ω–æ",
                   "–ú–∞—Ç—É—à–∫–∏–Ω–æ", "–ú–µ–¥–≤–µ–¥–∫–æ–≤–æ", "–ú–µ—Ç—Ä–æ–≥–æ—Ä–æ–¥–æ–∫",
                   "–ú–µ—â–∞–Ω—Å–∫–∏–π", "–ú–∏—Ç–∏–Ω–æ", "–ú–æ–∂–∞–π—Å–∫–∏–π", "–ú–æ–ª–∂–∞–Ω–∏–Ω–æ–≤—Å–∫–∏–π", "–ú–æ—Å–∫–≤–æ—Ä–µ—á—å–µ-—Å–∞–±—É—Ä–æ–≤–æ", "–ú—ã—Ç–∏—â–∏",
                   "–ù–∞–≥–∞—Ç–∏–Ω–æ-—Å–∞–¥–æ–≤–Ω–∏–∫–∏", "–ù–∞–≥–∞—Ç–∏–Ω—Å–∫–∏–π –∑–∞—Ç–æ–Ω", "–ù–∞–≥–æ—Ä–Ω—ã–π", "–ù–µ–∫—Ä–∞—Å–æ–≤–∫–∞",
                   "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∏–π", "–ù–æ–≤–æ-–ø–µ—Ä–µ–¥–µ–ª–∫–∏–Ω–æ", "–ù–æ–≤–æ–≥–∏—Ä–µ–µ–≤–æ", "–ù–æ–≤–æ–∫–æ—Å–∏–Ω–æ", "–ù–∞—Ä–æ-—Ñ–æ–º–∏–Ω—Å–∫", "–ù–æ–≥–∏–Ω—Å–∫",
                   "–û–±—Ä—É—á–µ–≤—Å–∫–∏–π", "–û—Ä–µ—Ö–æ–≤–æ-–±–æ—Ä–∏—Å–æ–≤–æ —Å–µ–≤–µ—Ä–Ω–æ–µ", "–û—Ä–µ—Ö–æ–≤–æ-–±–æ—Ä–∏—Å–æ–≤–æ —é–∂–Ω–æ–µ",
                   "–û—Å—Ç–∞–Ω–∫–∏–Ω—Å–∫–∏–π", "–û—Ç—Ä–∞–¥–Ω–æ–µ", "–û—á–∞–∫–æ–≤–æ-–º–∞—Ç–≤–µ–µ–≤—Å–∫–æ–µ", "–û–¥–∏–Ω—Ü–æ–≤–æ", "–û—Ä–µ—Ö–æ–≤–æ-–∑—É–µ–≤–æ",
                   "–ü–µ—Ä–æ–≤–æ", "–ü–µ—á–∞—Ç–Ω–∏–∫–∏", "–ü–æ–¥–æ–ª—å—Å–∫", "–ü—É—à–∫–∏–Ω–æ",
                   "–ü–æ–∫—Ä–æ–≤—Å–∫–æ–µ-—Å—Ç—Ä–µ—à–Ω–µ–≤–æ", "–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–æ–µ", "–ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∏–π", "–ü—Ä–æ—Å–ø–µ–∫—Ç –≤–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ",
                   "–†–∞–º–µ–Ω–∫–∏", "–†–æ—Å—Ç–æ–∫–∏–Ω–æ", "–†—è–∑–∞–Ω—Å–∫–∏–π", "–†–∞–º–µ–Ω—Å–∫–æ–µ", "–†–µ—É—Ç–æ–≤", "–°–∞–≤—ë–ª–∫–∏", "–°–∞–≤—ë–ª–æ–≤—Å–∫–∏–π", "–°–≤–∏–±–ª–æ–≤–æ",
                   "–°–µ–≤–µ—Ä–Ω—ã–π", "–°–∏–ª–∏–Ω–æ", "–°–æ–∫–æ–ª", "–°–æ–∫–æ–ª–∏–Ω–∞—è –≥–æ—Ä–∞", "–°–æ–∫–æ–ª—å–Ω–∏–∫–∏", "–°–æ–ª–Ω—Ü–µ–≤–æ",
                   "–°—Ç–∞—Ä–æ–µ –∫—Ä—é–∫–æ–≤–æ", "–°—Ç—Ä–æ–≥–∏–Ω–æ", "–°–µ—Ä–≥–∏–µ–≤ –ø–æ—Å–∞–¥", "–°–µ—Ä–ø—É—Ö–æ–≤", "–°—Ç—É–ø–∏–Ω–æ",
                   "–¢–∞–≥–∞–Ω—Å–∫–∏–π", "–¢–≤–µ—Ä—Å–∫–æ–π", "–¢–µ–∫—Å—Ç–∏–ª—å—â–∏–∫–∏", "–¢—ë–ø–ª—ã–π —Å—Ç–∞–Ω", "–¢—Ä–æ–∏—Ü–∫",
                   "–¢–∏–º–∏—Ä—è–∑–µ–≤—Å–∫–∏–π", "–¢—Ä–æ–ø–∞—Ä—ë–≤–æ-–Ω–∏–∫—É–ª–∏–Ω–æ", "–¢—É—à–∏–Ω–æ —Å–µ–≤–µ—Ä–Ω–æ–µ", "–¢—É—à–∏–Ω–æ —é–∂–Ω–æ–µ",
                   "–§–∏–ª—ë–≤—Å–∫–∏–π –ø–∞—Ä–∫", "–§–∏–ª–∏-–¥–∞–≤—ã–¥–∫–æ–≤–æ", "–§—Ä—è–∑–∏–Ω–æ", "–•–∞–º–æ–≤–Ω–∏–∫–∏", "–•–æ–≤—Ä–∏–Ω–æ", "–•–æ—Ä–æ—à—ë–≤–æ-–º–Ω–µ–≤–Ω–∏–∫–∏", "–•–∏–º–∫–∏",
                   "–•–æ—Ä–æ—à—ë–≤—Å–∫–∏–π", "–¶–∞—Ä–∏—Ü—ã–Ω–æ", "–ß–µ—Ä—ë–º—É—à–∫–∏", "–ß–µ—Ä—Ç–∞–Ω–æ–≤–æ", "–ß–µ—Ö–æ–≤", "–©—É–∫–∏–Ω–æ", "–©—ë–ª–∫–æ–≤–æ", "–©–µ—Ä–±–∏–Ω–∫–∞",
                   "–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å", "–Æ–∂–Ω–æ–ø–æ—Ä—Ç–æ–≤—ã–π", "–Ø–∫–∏–º–∞–Ω–∫–∞", "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π", "–Ø—Å–µ–Ω–µ–≤–æ"]
        for x in get_reg:
            if u_region.lower() == x.lower():
                user.update({
                    user.user_region: x
                }).where(user.user_id == u_id).execute()
                # cursor.execute('UPDATE user SET user_region = ? WHERE user_id = ?', (x, u_id,))
                # conn.commit()

                obj.update({obj.region: x}).where(obj.u_id == u_id).execute()
                # cursor.execute('UPDATE obj SET region = ? WHERE u_id = ?', (x, u_id,))
                # conn.commit()
                search_obj.update({search_obj.region: x}).where(search_obj.u_id == u_id).execute()
                # cursor.execute('UPDATE search_obj SET region = ? WHERE u_id = ?', (x, u_id,))
                # conn.commit()
                t = '–Ø –ø–æ–º–µ–Ω—è–ª —Ç–≤–æ–π —Ä–∞–π–æ–Ω –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª –µ–≥–æ –≤ —Ç–≤–æ–∏—Ö –æ–±—å—è–≤–ª–µ–Ω–∏—è—Ö! –¢–µ–ø–µ—Ä—å —Ç–≤–æ–π —Ä–∞–π–æ–Ω - {}'.format(x)
                main_menu(message, t)
                break
        else:
            region(message)
            # t = '–ù–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–π —Ä–∞–π–æ–Ω.\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.'
            # msg = bot.send_message(message.chat.id, t)
            # bot.register_next_step_handler(msg, change_user_region)
            # main_menu(message, t)

    # -------------------------–û–ë–†–ê–ë–û–¢–ß–ò–ö –í–°–ï–• –ö–û–õ–õ –û–¢–í–ï–¢–û–í –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø-----------------------
    @bot.callback_query_handler(func=lambda call: True)
    def apply_get(call):
        message = call.message
        bot.answer_callback_query(call.id)
        if call.data == 'No':
            t = '–ö–∞–∫ —Å–∫–∞–∂–µ—à—å! –ù–∏–∫–∞–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π üòå'
            app_num = 3
            u_id = call.from_user.id

            user.update({
                user.user_registration: app_num,
                user.search_message: None  # user.user_region
            }).where(user.user_id == u_id).execute()
            # cursor.execute("UPDATE 'user' SET 'user_registration' = ? WHERE user_id = ?",
            #                (app_num, u_id,))
            # conn.commit()

            # cursor.execute("UPDATE 'user' SET 'search_message' = user_region WHERE user_id = ?", (u_id,))
            # conn.commit()
            bot.edit_message_reply_markup(message.chat.id, message_id=message.message_id,
                                          reply_markup=None)  # —É–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            main_menu(message, t)
        if call.data == 'Yes':
            app_num = 2
            u_id = call.from_user.id
            # cursor.execute("UPDATE 'user' SET 'user_registration' = ? WHERE user_id = ?",
            #                (app_num, u_id,))
            # conn.commit()
            user.update({
                user.user_registration: app_num,
                user.search_message: user.user_region
            }).where(user.user_id == u_id).execute()

            # cursor.execute("UPDATE 'user' SET 'search_message' = user_region WHERE user_id = ?", (u_id,))
            # print(cursor.query)
            # conn.commit()
            bot.edit_message_reply_markup(message.chat.id, message_id=message.message_id,
                                          reply_markup=None)  # —É–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            t = '–°—É–ø–µ—Ä! –î–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å, —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –æ –ø–æ–∏—Å–∫–µ –≤ —Ç–≤–æ–µ–º —Ä–∞–π–æ–Ω–µ.'
            main_menu(message, t)
        if call.data == 'Yes+':
            app_num = 1
            u_id = call.from_user.id
            user.update({
                user.user_registration: app_num
            }).where(user.user_id == u_id).execute()
            # cursor.execute("UPDATE 'user' SET 'user_registration' = ? WHERE user_id = ?",
            #                (app_num, u_id,))
            # conn.commit()
            bot.edit_message_reply_markup(message.chat.id, message_id=message.message_id,
                                          reply_markup=None)  # —É–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            t = '–û—Ç–ª–∏—á–Ω–æ! –ù–∞–ø–∏—à–∏ —Ä–∞–π–æ–Ω—ã, –æ –ø–æ–∏—Å–∫–µ –≤–µ—â–µ–π –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n' \
                '–ù–∞–ø—Ä–∏–º–µ—Ä: –ê—Ä–±–∞—Ç, –¶–∞—Ä–∏—Ü—ã–Ω–æ, –í–Ω—É–∫–æ–≤–æ'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_message_init)

        # --------MENU--------
        if call.data == 'menu':
            t = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
            main_menu(message, t)

        # ---------–°–î–ê–ï–ú---------
        if call.data == '1':
            t = '–ó–¥–æ—Ä–æ–≤–æ, —á—Ç–æ —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å —á—Ç–æ-—Ç–æ –≤ –∞—Ä–µ–Ω–¥—É! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. ' \
                '–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –±—ã —Ö–æ—Ç–µ–ª —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É. –í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ:'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ',
                                              callback_data='1-1')
            key2 = types.InlineKeyboardButton('–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞',
                                              callback_data='1-2')
            key3 = types.InlineKeyboardButton('–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏',
                                              callback_data='1-3')
            key4 = types.InlineKeyboardButton(
                '–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
                callback_data='1-4')
            key5 = types.InlineKeyboardButton('–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å',
                                              callback_data='1-5')
            key6 = types.InlineKeyboardButton('–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã',
                                              callback_data='1-6')
            key7 = types.InlineKeyboardButton('–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
                                              callback_data='1-7')
            key8 = types.InlineKeyboardButton('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
                                              callback_data='1-8')
            key9 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞',
                                              callback_data='1-9')
            key10 = types.InlineKeyboardButton('–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏',
                                               callback_data='1-10')
            key11 = types.InlineKeyboardButton('–ü—Ä–æ—á–µ–µ', callback_data='1-11')
            key12 = types.InlineKeyboardButton('–í—ã–π—Ç–∏ –≤ –ú–ï–ù–Æ', callback_data='menu')
            markup.row(key12)
            markup.row(key1)
            markup.row(key2)
            markup.row(key3)
            markup.row(key4)
            markup.row(key5)
            markup.row(key6)
            markup.row(key7)
            markup.row(key8)
            markup.row(key9)
            markup.row(key10)
            markup.row(key11)
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t, reply_markup=markup)

        # --------–ê–†–ï–ù–î–£–ï–ú-------
        if call.data == '2':
            u_id = call.from_user.id
            t = '–ü–æ–Ω—è–ª —Ç–µ–±—è, –∞—Ä–µ–Ω–¥—É–µ–º! –£–∂–µ –≤—Å–ø–æ–º–∏–Ω–∞–Ω–∏—é –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ç–≤–æ–∏—Ö —Å–æ—Å–µ–¥–µ–π! ' \
                '–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω—É–∂–Ω—ã–π —Ç–µ–±–µ –ø—Ä–µ–¥–º–µ—Ç.'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ {}'.format(how_many_obj('–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ', u_id)),
                                              callback_data='2-1')
            key2 = types.InlineKeyboardButton('–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞ {}'.format(how_many_obj('–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞', u_id)),
                                              callback_data='2-2')
            key3 = types.InlineKeyboardButton('–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏ {}'.format(how_many_obj('–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏', u_id)),
                                              callback_data='2-3')
            key4 = types.InlineKeyboardButton(
                '–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è {}'.format(how_many_obj('–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', u_id)),
                callback_data='2-4')
            key5 = types.InlineKeyboardButton('–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å {}'.format(how_many_obj('–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å', u_id)),
                                              callback_data='2-5')
            key6 = types.InlineKeyboardButton('–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã {}'.format(how_many_obj('–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã', u_id)),
                                              callback_data='2-6')
            key7 = types.InlineKeyboardButton('–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π {}'.format(how_many_obj('–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π', u_id)),
                                              callback_data='2-7')
            key8 = types.InlineKeyboardButton('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã {}'.format(how_many_obj('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', u_id)),
                                              callback_data='2-8')
            key9 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞ {}'.format(how_many_obj('–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞', u_id)),
                                              callback_data='2-9')
            key10 = types.InlineKeyboardButton('–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏ {}'.format(how_many_obj('–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏', u_id)),
                                               callback_data='2-10')
            key11 = types.InlineKeyboardButton('–ü—Ä–æ—á–µ–µ {}'.format(how_many_obj('–ü—Ä–æ—á–µ–µ', u_id)), callback_data='2-11')
            key12 = types.InlineKeyboardButton('–í—ã–π—Ç–∏ –≤ –ú–ï–ù–Æ', callback_data='menu')
            key13 = types.InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø–æ–∏—Å–∫–µ', callback_data='search')
            markup.row(key12)
            markup.row(key13)
            markup.row(key1)
            markup.row(key2)
            markup.row(key3)
            markup.row(key4)
            markup.row(key5)
            markup.row(key6)
            markup.row(key7)
            markup.row(key8)
            markup.row(key9)
            markup.row(key10)
            markup.row(key11)
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t, reply_markup=markup)

        # --------–ê–†–ï–ù–î–£–ï–ú –ü–û–ò–°–ö-----------------------
        if call.data == '2-1':
            category = '–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-2':
            category = '–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-3':
            category = '–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-4':
            category = '–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-5':
            category = '–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-6':
            category = '–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-7':
            category = '–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-8':
            category = '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-9':
            category = '–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-10':
            category = '–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)
        if call.data == '2-11':
            category = '–ü—Ä–æ—á–µ–µ'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                t = '–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ ({}) —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å? –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ' \
                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ ¬´–≤—Å–µ¬ª'.format(category)
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, t)
                bot.register_next_step_handler(msg, search_cat1, category)

        # ---------------------------------------------------------------------------------------------------
        if call.data == '2-1+':
            t = '–ö—Ä—É—Ç–æ! –¢–æ–≥–¥–∞ —Å–º–µ–ª–æ –ø–∏—à–∏ –≤–ª–∞–¥–µ–ª—å—Ü—É ü§ù –û–Ω —Ç–µ–±—è —É–∂–µ –∂–¥–µ—Ç!'
            main_menu(message, t)
        if call.data == '2-1-':
            t = '–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç? –¢–æ–≥–¥–∞ –¥–∞–≤–∞–π —è —Å–ø—Ä–æ—à—É –≤—Å–µ—Ö —Å–æ—Å–µ–¥–µ–π? –£ –∫–æ–≥–æ-—Ç–æ 100% –µ—Å—Ç—å!'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
            key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
            markup.row(key1)
            markup.row(key2)
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t, reply_markup=markup)
        if call.data == '2-1---':
            t = '–ß—Ç–æ–±—ã —è —Ç–æ—á–Ω–æ –ø–µ—Ä–µ–¥–∞–ª –≤—Å–µ–º —Ç–≤–æ—é –ø—Ä–æ—Å—å–±—É - –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. \n' \
                '–ù–∞–ø–∏—à–∏ –µ—â–µ —Ä–∞–∑ –Ω–∞–∑–≤–∞–Ω–∏–µ, —á—Ç–æ —Ç—ã –∏—â–µ—à—å: '
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_name)
        if call.data == '2-1-++':
            t = '–¢–æ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é —Ç–µ–±–µ –º–µ–Ω—é...'
            main_menu(message, t)
        if call.data == '2-1-0':
            t = '–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å ->'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data='2-1-0-1')
            key2 = types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='2-1-0-2')
            markup.row(key1)
            markup.row(key2)
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t, reply_markup=markup)
        if call.data == '2-1-0-1':
            t = '–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_name_edit)
        if call.data == '2-1-0-2':
            bot.delete_message(message.chat.id, message.message_id)
            t = '–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_text)

        if call.data == '2-1-1':
            send_push(call)
            t = '–°–æ—Å–µ–¥—Å–∫–∞—è –ø–æ–∏—Å–∫–æ–≤–∞—è –º–∞—à–∏–Ω–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ú–Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, ' \
                '–Ω–æ —è —Å–æ–æ–±—â—É —Å—Ä–∞–∑—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞–π–¥—É –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –¥–ª—è —Ç–µ–±—è –≤–∞—Ä–∏–∞–Ω—Ç—ã)'
            main_menu(message, t)

        # --------–ü–û–°–ú–û–¢–†–ï–¢–¨ –í–°–ï –ú–û–ò –û–ë–¨–Ø–í–õ–ï–ù–ò–Ø---------
        if call.data == '3':
            t = '–ö–∞–∫–∏–µ –æ–±—å—è–≤–ª–µ–Ω–∏—è —Å–º–æ—Ç—Ä–∏–º?'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–ß—Ç–æ —è —Å–¥–∞—é?', callback_data='3-1-1')
            key2 = types.InlineKeyboardButton('–ß—Ç–æ —è –∏—â—É –≤ –∞—Ä–µ–Ω–¥—É?', callback_data='3-1-2')
            markup.row(key1)
            markup.row(key2)
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t, reply_markup=markup)
        if call.data == '3-1-1':
            u_id = call.from_user.id

            obj.delete().where((obj.u_id == u_id) & (obj.photo.is_null(True)) & (obj.money_cat1.is_null(True)) &
                               (obj.cat_1.is_null(True))).execute()
            # cursor.execute('DELETE FROM obj WHERE u_id = ? AND photo IS NULL OR money_cat1 IS NULL OR cat_1 IS NULL',
            #                (u_id,))
            # conn.commit()
            # cursor.execute('DELETE FROM search_obj WHERE u_id = ? AND obj_comment IS NULL', (u_id,))
            # conn.commit()

            search_obj.delete().where((search_obj.u_id == u_id) & (search_obj.obj_comment.is_null(True))).execute()

            # cursor.execute("SELECT * FROM 'obj' WHERE u_id = ?",
            #                (u_id,))
            # result = cursor.fetchall()
            result = obj.select().where(obj.u_id == u_id).execute()
            if result:
                bot.send_message(message.chat.id,
                                 "–í–æ—Ç –≤—Å–µ —Ç–≤–æ–∏ –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: ",
                                 parse_mode='html', timeout=10)
                for x in result:
                    try:
                        bot.send_photo(message.chat.id, x.photo, timeout=10)
                        markup = types.InlineKeyboardMarkup()
                        key1 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data='delete1')
                        markup.row(key1)
                        bot.send_message(message.chat.id,
                                         "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {}\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\n–¶–µ–Ω–∞:{}—Ä\n\n–û–ø–∏—Å–∞–Ω–∏–µ: {}"
                                         "\n\n–í–ª–∞–¥–µ–ª–µ—Ü: {}".format(x.category, x.name_cat1_obj, x.money_cat1, x.cat_1,
                                                                   x.user_name),
                                         parse_mode='html', reply_markup=markup, timeout=10)
                    except Exception as ex:
                        print('line 808')
                        print(ex)
            else:
                t = '–ß—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∏–ø–æ–º–Ω—é, —á—Ç–æ–±—ã –º—ã —Å —Ç–æ–±–æ–π —Å–æ–∑–¥–∞–≤–∞–ª–∏ –≤–º–µ—Å—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ üëÄ –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?'
                main_menu(message, t)

        if call.data == '3-1-2':
            u_id = call.from_user.id
            # cursor.execute('DELETE FROM obj WHERE u_id = ? AND photo IS NULL OR money_cat1 IS NULL OR cat_1 IS NULL',
            #                (u_id,))
            # conn.commit()
            obj.delete().where((obj.u_id == u_id) & obj.photo.is_null(True) & obj.money_cat1.is_null(True)
                               & obj.cat_1.is_null(True)).execute()
            # cursor.execute('DELETE FROM search_obj WHERE u_id = ? AND obj_comment IS NULL', (u_id,))
            # conn.commit()
            search_obj.delete().where((search_obj.u_id == u_id) & search_obj.obj_comment.is_null(True)).execute()
            # cursor.execute("SELECT * FROM 'search_obj' WHERE u_id = ?",
            #                (u_id,))
            # result = cursor.fetchall()
            result = search_obj.select().where(search_obj.u_id == u_id).execute()
            if result:
                bot.send_message(message.chat.id,
                                 "–í–æ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –ø–æ–∏—Å–∫, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Å–æ–∑–¥–∞–ª: ",
                                 parse_mode='html', timeout=10)
                for x in result:
                    markup = types.InlineKeyboardMarkup()
                    key1 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data='delete2')
                    markup.row(key1)
                    bot.send_message(message.chat.id,
                                     "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\n{} - —Å—Ä–æ—á–Ω–æ –∏—â–µ—Ç –∫–æ–µ-—á—Ç–æ üî•\n\n"
                                     "–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n\n"
                                     .format(x.u_name, x.obj_name, x.obj_comment),
                                     reply_markup=markup, timeout=10)
            else:
                t = '–ß—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∏–ø–æ–º–Ω—é, —á—Ç–æ–±—ã –º—ã —Å —Ç–æ–±–æ–π —Å–æ–∑–¥–∞–≤–∞–ª–∏ –∑–∞–ø—Ä–æ—Å. –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?'
                main_menu(message, t)

        # --===---–ü–û–°–ú–û–¢–†–ï–¢–¨ –í–°–ï –û–ë–¨–Ø–í–õ–ï–ù–ò–Ø –û –°–î–ê–ß–ï –í –ö–ê–¢–ï–ì–û–†–ò–ò-----------
        if call.data == '11':
            u_id = call.from_user.id
            t = '–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ {}'.format(how_many_obj('–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ', u_id)),
                                              callback_data='11-1')
            key2 = types.InlineKeyboardButton('–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞ {}'.format(how_many_obj('–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞', u_id)),
                                              callback_data='11-2')
            key3 = types.InlineKeyboardButton('–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏ {}'.format(how_many_obj('–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏', u_id)),
                                              callback_data='11-3')
            key4 = types.InlineKeyboardButton(
                '–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è {}'.format(how_many_obj('–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', u_id)),
                callback_data='11-4')
            key5 = types.InlineKeyboardButton('–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å {}'.format(how_many_obj('–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å', u_id)),
                                              callback_data='11-5')
            key6 = types.InlineKeyboardButton('–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã {}'.format(how_many_obj('–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã', u_id)),
                                              callback_data='11-6')
            key7 = types.InlineKeyboardButton('–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π {}'.format(how_many_obj('–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π', u_id)),
                                              callback_data='11-7')
            key8 = types.InlineKeyboardButton('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã {}'.format(how_many_obj('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', u_id)),
                                              callback_data='11-8')
            key9 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞ {}'.format(how_many_obj('–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞', u_id)),
                                              callback_data='11-9')
            key10 = types.InlineKeyboardButton('–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏ {}'.format(how_many_obj('–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏', u_id)),
                                               callback_data='11-10')
            key11 = types.InlineKeyboardButton('–ü—Ä–æ—á–µ–µ {}'.format(how_many_obj('–ü—Ä–æ—á–µ–µ', u_id)),
                                               callback_data='11-11')
            key12 = types.InlineKeyboardButton('–í—ã–π—Ç–∏ –≤ –ú–ï–ù–Æ', callback_data='menu')
            markup.row(key12)
            markup.row(key1)
            markup.row(key2)
            markup.row(key3)
            markup.row(key4)
            markup.row(key5)
            markup.row(key6)
            markup.row(key7)
            markup.row(key8)
            markup.row(key9)
            markup.row(key10)
            markup.row(key11)
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t, reply_markup=markup)
        if call.data == '11-1':
            category = '–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-2':
            print(1)
            category = '–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                print(2)
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                print(3)
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-3':
            category = '–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-4':
            category = '–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-5':
            category = '–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-6':
            category = '–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-7':
            category = '–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-8':
            category = '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-9':
            category = '–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-10':
            category = '–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        if call.data == '11-11':
            category = '–ü—Ä–æ—á–µ–µ'
            u_id = call.from_user.id
            if how_many_obj(category, u_id) == ' ':
                t = '–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏({}) –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫?'.format(category)
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                # bot.send_message(message.chat.id, t, reply_markup=markup)
                bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t,
                                      reply_markup=markup, timeout=10)
            else:
                # t = '–ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}, –≤—Å–µ –≤–µ—Ä–Ω–æ?'.format(category)
                # msg = bot.send_message(message.chat.id, t)
                # bot.register_next_step_handler(msg, look_obj, category)
                return look_obj(call, category)

        # ----------–ü–û–°–ú–û–¢–†–ï–¢–¨ –í–°–ï –û–ë–™–Ø–í–õ–ï–ù–ò–Ø –û –ü–û–ò–°–ö–ï –í –ê–†–ï–ù–î–£------------
        if call.data == '77':
            t = '–í–æ—Ç —á—Ç–æ —Å–µ–π—á–∞—Å –∏—â—É—Ç...'
            u_id = call.from_user.id
            # cursor.execute("SELECT user_region FROM 'user' WHERE user_id = ?", (u_id,))
            # user_region = cursor.fetchone()
            user_region = user.select(user.user_region).where(user.user_id == u_id)
            # cursor.execute("SELECT * FROM 'search_obj' WHERE obj_comment IS NOT NULL AND region = ?",
            #                (user_region[0],))
            # result = cursor.fetchall()
            result = search_obj.select().where(search_obj.obj_comment.is_null(False) &
                                               (search_obj.region == user_region)).execute()
            if result:
                bot.send_message(message.chat.id, t)
                for x in result:
                    bot.send_message(message.chat.id,
                                     "{} - —Å—Ä–æ—á–Ω–æ –∏—â–µ—Ç –∫–æ–µ-—á—Ç–æ üî•\n\n"
                                     "–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n\n"
                                     .format(x.u_name, x.obj_name, x.obj_comment), timeout=10)
            else:
                t = '–í —Ç–≤–æ—ë–º —Ä–∞–π–æ–Ω–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø–æ–∏—Å–∫.'
                main_menu(message, t)

        # -----–°–î–ê–¢–¨ –í –ö–ê–¢–ï–ì–û–†–ò–ò -----
        if call.data == '1-1':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-2':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-3':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-4':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-5':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-6':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-7':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-8':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-9':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-10':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        if call.data == '1-11':
            t = '–°—É–ø–µ—Ä! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ü—Ä–æ—á–µ–µ) —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É? ' \
                '–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üëå\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É'
            z = '–ü—Ä–æ—á–µ–µ'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, init_name_obj, z)

        # -----–ü–û–î–¢–í–ï–†–î–ò–¢–¨ –¢–û–õ–¨–ö–û –ß–¢–û –°–û–ó–î–ê–ù–ù–û–ï –û–ë–¨–Ø–í–õ–ï–ù–ò–ï(–ö–ê–¢_1)------
        if call.data == '01':
            t = '–°—É–ø–µ—Ä! –û–±—ä—è–≤–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ.\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –ø–µ—Ä–µ–¥ —Å–¥–∞—á–µ–π –≤ –∞—Ä–µ–Ω–¥—É –∏–∑—É—á–∏ –ø—Ä–∞–≤–∏–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç ' \
                '–∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: https://telegra.ph/Osnovy-bezopasnoj-sdelki-12-13'
            main_menu(message, t)

        # ----–†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ –¢–û–õ–¨–ö–û –ß–¢–û –°–û–ó–î–ê–ù–ù–û–ï –û–ë–¨–Ø–í–õ–ï–ù–ò–ï(–ö–ê–¢_1)---------------
        if call.data == '01-1':
            t = '–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å ->'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data='01-1-1')
            key2 = types.InlineKeyboardButton('–¶–µ–Ω–∞', callback_data='01-1-2')
            key3 = types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='01-1-3')
            key5 = types.InlineKeyboardButton('–§–æ—Ç–æ', callback_data='01-1-5')
            key4 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data='01-1-4')
            markup.row(key1)
            markup.row(key2)
            markup.row(key3)
            markup.row(key5)
            markup.row(key4)
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t, reply_markup=markup)
        if call.data == '01-1-4':
            u_id = call.from_user.id
            m = obj.select(fn.max(obj.id)).where(obj.u_id == u_id)
            obj.delete().where(obj.id == m).execute()
            # cursor.execute('DELETE FROM obj WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)',
            #                (u_id,))
            # conn.commit()
            t = '–Ø —É–¥–∞–ª–∏–ª —Ç–≤–æ—ë –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.\n'
            main_menu(message, t)
        if call.data == '01-1-1':
            t = '–í–≤–µ–¥–∏ –ù–û–í–û–ï –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, update_name_obj)
        if call.data == '01-1-2':
            t = '–í–≤–µ–¥–∏ –ù–û–í–£–Æ —Ü–µ–Ω—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, update_money_obj)
        if call.data == '01-1-3':
            t = '–í–≤–µ–¥–∏ –ù–û–í–û–ï –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, update_text_obj)
        if call.data == '01-1-5':
            t = '–û—Ç–ø—Ä–∞–≤—å –ù–û–í–£–Æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è'
            bot.delete_message(message.chat.id, message.message_id)
            msg = bot.send_message(message.chat.id, t, parse_mode='html')
            bot.register_next_step_handler(msg, update_photo_obj)

        # --------–£–î–ê–õ–ò–¢–¨ –û–ë–¨–Ø–í–õ–ï–ù–ò–ï----------------------------------------
        if call.data == 'delete1':
            t = '–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –æ–±—å—è–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å.'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, delete_obj)
            return

        if call.data == 'delete2':
            t = '–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –æ–±—å—è–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å.'

            msg = bot.send_message(message.chat.id, t, timeout=10)
            bot.register_next_step_handler(msg, delete_search_obj)

        # --------—Å–û–ó–î–ê–¢–¨ –û–ë–™–Ø–í–õ–ï–ù–ò–ï –û –ü–û–ò–°–ö–ï –í –ê–†–ï–ù–î–£-------------
        if call.data == 'search':
            t = '–•–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø–æ–∏—Å–∫–µ –≤ –∞—Ä–µ–Ω–¥—É?'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
            key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
            markup.row(key1)
            markup.row(key2)
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=t, reply_markup=markup)

    # -------------------------–§–£–ù–ö–¶–ò–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –í –ù–ï–°–ö–û–õ–¨–ö–ò–• –†–ê–ô–û–ù–ê–•-------------------------------
    def search_message_init(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        u_reg = message.text
        u_region = [str(x) for x in u_reg.split(', ')]
        u_id = message.from_user.id
        get_reg = ["–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π", "–ê–ª–µ–∫—Å–µ–µ–≤—Å–∫–∏–π", "–ê–ª—Ç—É—Ñ—å–µ–≤—Å–∫–∏–π", "–ê—Ä–±–∞—Ç", "–ê—ç—Ä–æ–ø–æ—Ä—Ç",
                   "–ë–∞–±—É—à–∫–∏–Ω—Å–∫–∏–π", "–ë–∞—Å–º–∞–Ω–Ω—ã–π", "–ë–µ–≥–æ–≤–æ–π", "–ë–µ—Å–∫—É–¥–Ω–∏–∫–æ–≤—Å–∫–∏–π", "–ë–∏–±–∏—Ä–µ–≤–æ",
                   "–ë–∏—Ä—é–ª—ë–≤–æ –≤–æ—Å—Ç–æ—á–Ω–æ–µ", "–ë–∏—Ä—é–ª—ë–≤–æ –∑–∞–ø–∞–¥–Ω–æ–µ", "–ë–æ–≥–æ—Ä–æ–¥—Å–∫–æ–µ", "–ë—Ä–∞—Ç–µ–µ–≤–æ",
                   "–ë—É—Ç–æ–≤–æ", "–ë—É—Ç—ã—Ä—Å–∫–∏–π", "–ë–∞–ª–∞—à–∏—Ö–∞", "–í–µ—à–Ω—è–∫–∏",
                   "–í–Ω—É–∫–æ–≤–æ", "–í–æ–π–∫–æ–≤—Å–∫–∏–π", "–í–æ—Å—Ç–æ—á–Ω—ã–π", "–í—ã—Ö–∏–Ω–æ-–∂—É–ª–µ–±–∏–Ω–æ", "–í–∏–¥–Ω–æ–µ", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—Å–∫", "–ì–∞–≥–∞—Ä–∏–Ω—Å–∫–∏–π",
                   "–ì–æ–ª–æ–≤–∏–Ω—Å–∫–∏–π", "–ì–æ–ª—å—è–Ω–æ–≤–æ", "–î–∞–Ω–∏–ª–æ–≤—Å–∫–∏–π", "–î–µ–≥—É–Ω–∏–Ω–æ –≤–æ—Å—Ç–æ—á–Ω–æ–µ", "–î–µ–≥—É–Ω–∏–Ω–æ –∑–∞–ø–∞–¥–Ω–æ–µ",
                   "–î–º–∏—Ç—Ä–æ–≤—Å–∫–∏–π", "–î–æ–Ω—Å–∫–æ–π", "–î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ", "–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π", "–î–º–∏—Ç—Ä–æ–≤", "–î–æ–ª–≥–æ–ø—Ä—É–¥–Ω—ã–π", "–î–æ–º–æ–¥–µ–¥–æ–≤–æ",
                   "–î—É–±–Ω–∞", "–ï–≥–æ—Ä—å–µ–≤—Å–∫", "–ñ—É–∫–æ–≤—Å–∫–∏–π", "–ó–∞–º–æ—Å–∫–≤–æ—Ä–µ—á—å–µ", "–ó–µ–ª–µ–Ω–æ–≥—Ä–∞–¥",
                   "–ó—é–∑–∏–Ω–æ", "–ó—è–±–ª–∏–∫–æ–≤–æ", "–ò–≤–∞–Ω–æ–≤—Å–∫–æ–µ", "–ò–∑–º–∞–π–ª–æ–≤–æ –≤–æ—Å—Ç–æ—á–Ω–æ–µ", "–ò–∑–º–∞–π–ª–æ–≤–æ",
                   "–ò–∑–º–∞–π–ª–æ–≤–æ —Å–µ–≤–µ—Ä–Ω–æ–µ", "–ò–≤–∞–Ω—Ç–µ–µ–≤–∫–∞", "–ö–∞–ø–æ—Ç–Ω—è", "–ö–æ–Ω—å–∫–æ–≤–æ", "–ö–æ–ø—Ç–µ–≤–æ", "–ö–æ—Å–∏–Ω–æ-—É—Ö—Ç–æ–º—Å–∫–∏–π",
                   "–ö–æ—Ç–ª–æ–≤–∫–∞", "–ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∏–π", "–ö—Ä—ã–ª–∞—Ç—Å–∫–æ–µ", "–ö—Ä—é–∫–æ–≤–æ", "–ö—É–∑—å–º–∏–Ω–∫–∏",
                   "–ö—É–Ω—Ü–µ–≤–æ", "–ö—É—Ä–∫–∏–Ω–æ", "–ö–æ—Ä–æ–ª—ë–≤", "–ö–ª–∏–Ω", "–ö–æ–ª–æ–º–Ω–∞", "–ö–æ—Ç–µ–ª—å–Ω–∏–∫–∏", "–ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫",
                   "–õ–µ–≤–æ–±–µ—Ä–µ–∂–Ω—ã–π", "–õ–µ—Ñ–æ—Ä—Ç–æ–≤–æ", "–õ–∏–∞–Ω–æ–∑–æ–≤–æ", "–õ–æ–º–æ–Ω–æ—Å–æ–≤—Å–∫–∏–π", "–õ–æ–±–Ω—è", "–õ–æ—Å–∏–Ω–æ-–ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π",
                   "–õ—ã—Ç–∫–∞—Ä–∏–Ω–æ", "–õ—é–±–µ—Ä—Ü—ã", "–õ–æ—Å–∏–Ω–æ–æ—Å—Ç—Ä–æ–≤—Å–∫–∏–π", "–õ—é–±–ª–∏–Ω–æ", "–ú–∞—Ä—Ñ–∏–Ω–æ", "–ú–∞—Ä—å–∏–Ω–∞ —Ä–æ—â–∞", "–ú–∞—Ä—å–∏–Ω–æ",
                   "–ú–∞—Ç—É—à–∫–∏–Ω–æ", "–ú–µ–¥–≤–µ–¥–∫–æ–≤–æ", "–ú–µ—Ç—Ä–æ–≥–æ—Ä–æ–¥–æ–∫",
                   "–ú–µ—â–∞–Ω—Å–∫–∏–π", "–ú–∏—Ç–∏–Ω–æ", "–ú–æ–∂–∞–π—Å–∫–∏–π", "–ú–æ–ª–∂–∞–Ω–∏–Ω–æ–≤—Å–∫–∏–π", "–ú–æ—Å–∫–≤–æ—Ä–µ—á—å–µ-—Å–∞–±—É—Ä–æ–≤–æ", "–ú—ã—Ç–∏—â–∏",
                   "–ù–∞–≥–∞—Ç–∏–Ω–æ-—Å–∞–¥–æ–≤–Ω–∏–∫–∏", "–ù–∞–≥–∞—Ç–∏–Ω—Å–∫–∏–π –∑–∞—Ç–æ–Ω", "–ù–∞–≥–æ—Ä–Ω—ã–π", "–ù–µ–∫—Ä–∞—Å–æ–≤–∫–∞",
                   "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∏–π", "–ù–æ–≤–æ-–ø–µ—Ä–µ–¥–µ–ª–∫–∏–Ω–æ", "–ù–æ–≤–æ–≥–∏—Ä–µ–µ–≤–æ", "–ù–æ–≤–æ–∫–æ—Å–∏–Ω–æ", "–ù–∞—Ä–æ-—Ñ–æ–º–∏–Ω—Å–∫", "–ù–æ–≥–∏–Ω—Å–∫",
                   "–û–±—Ä—É—á–µ–≤—Å–∫–∏–π", "–û—Ä–µ—Ö–æ–≤–æ-–±–æ—Ä–∏—Å–æ–≤–æ —Å–µ–≤–µ—Ä–Ω–æ–µ", "–û—Ä–µ—Ö–æ–≤–æ-–±–æ—Ä–∏—Å–æ–≤–æ —é–∂–Ω–æ–µ",
                   "–û—Å—Ç–∞–Ω–∫–∏–Ω—Å–∫–∏–π", "–û—Ç—Ä–∞–¥–Ω–æ–µ", "–û—á–∞–∫–æ–≤–æ-–º–∞—Ç–≤–µ–µ–≤—Å–∫–æ–µ", "–û–¥–∏–Ω—Ü–æ–≤–æ", "–û—Ä–µ—Ö–æ–≤–æ-–∑—É–µ–≤–æ",
                   "–ü–µ—Ä–æ–≤–æ", "–ü–µ—á–∞—Ç–Ω–∏–∫–∏", "–ü–æ–¥–æ–ª—å—Å–∫", "–ü—É—à–∫–∏–Ω–æ",
                   "–ü–æ–∫—Ä–æ–≤—Å–∫–æ–µ-—Å—Ç—Ä–µ—à–Ω–µ–≤–æ", "–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–æ–µ", "–ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∏–π", "–ü—Ä–æ—Å–ø–µ–∫—Ç –≤–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ",
                   "–†–∞–º–µ–Ω–∫–∏", "–†–æ—Å—Ç–æ–∫–∏–Ω–æ", "–†—è–∑–∞–Ω—Å–∫–∏–π", "–†–∞–º–µ–Ω—Å–∫–æ–µ", "–†–µ—É—Ç–æ–≤", "–°–∞–≤—ë–ª–∫–∏", "–°–∞–≤—ë–ª–æ–≤—Å–∫–∏–π", "–°–≤–∏–±–ª–æ–≤–æ",
                   "–°–µ–≤–µ—Ä–Ω—ã–π", "–°–∏–ª–∏–Ω–æ", "–°–æ–∫–æ–ª", "–°–æ–∫–æ–ª–∏–Ω–∞—è –≥–æ—Ä–∞", "–°–æ–∫–æ–ª—å–Ω–∏–∫–∏", "–°–æ–ª–Ω—Ü–µ–≤–æ",
                   "–°—Ç–∞—Ä–æ–µ –∫—Ä—é–∫–æ–≤–æ", "–°—Ç—Ä–æ–≥–∏–Ω–æ", "–°–µ—Ä–≥–∏–µ–≤ –ø–æ—Å–∞–¥", "–°–µ—Ä–ø—É—Ö–æ–≤", "–°—Ç—É–ø–∏–Ω–æ",
                   "–¢–∞–≥–∞–Ω—Å–∫–∏–π", "–¢–≤–µ—Ä—Å–∫–æ–π", "–¢–µ–∫—Å—Ç–∏–ª—å—â–∏–∫–∏", "–¢—ë–ø–ª—ã–π —Å—Ç–∞–Ω", "–¢—Ä–æ–∏—Ü–∫",
                   "–¢–∏–º–∏—Ä—è–∑–µ–≤—Å–∫–∏–π", "–¢—Ä–æ–ø–∞—Ä—ë–≤–æ-–Ω–∏–∫—É–ª–∏–Ω–æ", "–¢—É—à–∏–Ω–æ —Å–µ–≤–µ—Ä–Ω–æ–µ", "–¢—É—à–∏–Ω–æ —é–∂–Ω–æ–µ",
                   "–§–∏–ª—ë–≤—Å–∫–∏–π –ø–∞—Ä–∫", "–§–∏–ª–∏-–¥–∞–≤—ã–¥–∫–æ–≤–æ", "–§—Ä—è–∑–∏–Ω–æ", "–•–∞–º–æ–≤–Ω–∏–∫–∏", "–•–æ–≤—Ä–∏–Ω–æ", "–•–æ—Ä–æ—à—ë–≤–æ-–º–Ω–µ–≤–Ω–∏–∫–∏", "–•–∏–º–∫–∏",
                   "–•–æ—Ä–æ—à—ë–≤—Å–∫–∏–π", "–¶–∞—Ä–∏—Ü—ã–Ω–æ", "–ß–µ—Ä—ë–º—É—à–∫–∏", "–ß–µ—Ä—Ç–∞–Ω–æ–≤–æ", "–ß–µ—Ö–æ–≤", "–©—É–∫–∏–Ω–æ", "–©—ë–ª–∫–æ–≤–æ", "–©–µ—Ä–±–∏–Ω–∫–∞",
                   "–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å", "–Æ–∂–Ω–æ–ø–æ—Ä—Ç–æ–≤—ã–π", "–Ø–∫–∏–º–∞–Ω–∫–∞", "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π", "–Ø—Å–µ–Ω–µ–≤–æ"]
        # cursor.execute('SELECT user_region FROM user WHERE user_id = ?', (u_id,))
        # result = cursor.fetchone()
        result = user.select(user.user_region).where(user.user_id == u_id).get_or_none()
        # if result.user_region:
        #     u_region.append(result.user_region)
        if set(u_region).issubset(get_reg) == 1:
            result = ", ".join(list(set(get_reg).intersection(set(u_region))))
            user.update({
                user.search_message: result
            }).where(user.user_id == u_id).execute()
            # cursor.execute('UPDATE user SET search_message = ? WHERE user_id = ?', (result, u_id,))
            # conn.commit()
            t = '–ü–æ–Ω—è–ª —Ç–µ–±—è. –¢–µ–ø–µ—Ä—å –±—É–¥—É —Å–æ–æ–±—â–∞—Ç—å —Ç–µ–±–µ –æ –ø–æ–∏—Å–∫–µ –≤ —ç—Ç–∏—Ö —Ä–∞–π–æ–Ω–∞—Ö: {}'.format(result)
            main_menu(message, t)
        else:
            t = '–ù–µ –Ω–∞—à—ë–ª –≤—Å–µ —Ä–∞–π–æ–Ω—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.\n' \
                '–í–≤–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫–∏–º: –ê—Ä–±–∞—Ç, –¶–∞—Ä–∏—Ü—ã–Ω–æ, –í–Ω—É–∫–æ–≤–æ\n\n' \
                '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–π–æ–Ω–æ–≤:\n\n{}' \
                .format('\n'.join(get_reg))
            msg = bot.send_message(message.chat.id, t, timeout=10)
            bot.register_next_step_handler(msg, search_message_init)

    # -----------------–§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ü–†–û–°–ú–û–¢–†–ê –í–°–ï–• –û–ë. –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú –ò –†–ï–ì–ò–û–ù–£ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø----------------------
    def look_obj(message, category):
        # if message.text.lower() in stop_text:
        #     t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
        #     return main_menu(message, t)
        # if message[2] == 'from_user':
        #     u_id =
        u_id = message.from_user.id
        # cursor.execute("SELECT user_region FROM user WHERE user_id = ?", (u_id,))
        # u_region = cursor.fetchone()
        u_region = user.select(user.user_region).where(user.user_id == u_id)
        cat = '{}'.format(category)
        # cursor.execute("SELECT * FROM 'obj' WHERE "
        #                "cat_1 IS NOT NULL AND name_cat1_obj IS NOT NULL AND photo IS NOT NULL "
        #                "AND category = ? AND region = ?", (cat, u_region[0],))
        # result = cursor.fetchall()
        result = obj.select().where(
            obj.cat_1.is_null(False) &
            obj.name_cat1_obj.is_null(False) &
            obj.photo.is_null(False) &
            (obj.category == cat) &
            (obj.region == u_region))

        if result:
            bot.send_message(message.from_user.id,
                             "–í–æ—Ç –≤—Å–µ –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: ",
                             parse_mode='html', timeout=10)
            for x in result:
                bot.send_photo(message.from_user.id, x.photo)
                bot.send_message(message.from_user.id,
                                 "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {}\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\n–¶–µ–Ω–∞: {}—Ä\n\n–û–ø–∏—Å–∞–Ω–∏–µ :{}"
                                 "\n\n–í–ª–∞–¥–µ–ª–µ—Ü:{}".format(x.category, x.name_cat1_obj, x.money_cat1, x.cat_1,
                                                          x.user_name),
                                 parse_mode='html', timeout=10)
            t = '–ù–∞—à–µ–ª –ª–∏ —Ç—ã –Ω—É–∂–Ω–æ–µ –∏–ª–∏ –≤—Å–µ –Ω–µ —Ç–æ?\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –ø–µ—Ä–µ–¥ –∞—Ä–µ–Ω–¥–æ–π –∏–∑—É—á–∏ –ø—Ä–∞–≤–∏–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –∏–∑–±–µ–∂–∞—Ç—å ' \
                '–∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: https://telegra.ph/Osnovy-bezopasnoj-sdelki-12-13'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–ü–æ–¥—Ö–æ–¥–∏—Ç!', callback_data='2-1+')
            key2 = types.InlineKeyboardButton('–Ø –Ω–µ –Ω–∞—à—ë–ª, —á—Ç–æ –∏—Å–∫–∞–ª', callback_data='2-1-')
            markup.row(key1)
            markup.row(key2)
            bot.send_message(message.from_user.id, t, reply_markup=markup, timeout=10)
        else:
            t = '–ü–æ—Ö–æ–∂–µ, –µ—â–µ –Ω–∏–∫—Ç–æ –Ω–µ —Å–æ–∑–¥–∞–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–µ üòî'
            main_menu(message, t)

    # ------------------------------–§–£–ù–ö–¶–ò–ò –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –û–ë–¨–Ø–í–õ–ï–ù–ò–ô-------------------------------------
    def delete_obj(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        u_id = message.from_user.id
        u_text = message.text
        # cursor.execute('SELECT name_cat1_obj FROM obj WHERE u_id = ?', (u_id,))
        # result = cursor.fetchall()
        result = obj.select(obj.name_cat1_obj).where(obj.u_id == u_id)
        for x in result:
            # a = x[0]
            a = x.name_cat1_obj
            if u_text.lower() == a.lower():
                obj.delete().where((obj.u_id == u_id) & (obj.name_cat1_obj == a)).execute()
                # cursor.execute('DELETE FROM obj WHERE u_id = ? AND name_cat1_obj = ?', (u_id, a,))
                # conn.commit()
                t = '–Ø —É–¥–∞–ª–∏–ª –æ–±—å—è–≤–ª–µ–Ω–∏–µ ({})'.format(a)
                bot.send_message(message.chat.id, t, timeout=10)
                break
        else:
            t = '–Ø –Ω–µ –Ω–∞—à–µ–ª –≤ —Å–ø–∏—Å–∫–µ —Ç–≤–æ–∏—Ö –æ–±—å—è–≤–ª–µ–Ω–∏–π —Ç–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.'
            bot.send_message(message.chat.id, t, timeout=10)

    def delete_search_obj(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        u_id = message.from_user.id
        u_text = message.text
        # cursor.execute('SELECT obj_name FROM search_obj WHERE u_id = ?', (u_id,))
        # result = cursor.fetchall()
        result = search_obj.select(search_obj.obj_name).where(search_obj.u_id == u_id)
        for x in result:
            # a = x[0]
            a = x.obj_name
            if u_text.lower() == a.lower():
                # cursor.execute('DELETE FROM search_obj WHERE u_id = ? AND obj_name = ?', (u_id, a,))
                # conn.commit()
                search_obj.delete().where((search_obj.u_id == u_id) & (search_obj.obj_name == a)).execute()
                t = '–Ø —É–¥–∞–ª–∏–ª –æ–±—å—è–≤–ª–µ–Ω–∏–µ {}'.format(a)
                bot.send_message(message.chat.id, t, timeout=10)
                break
        else:
            t = '–Ø –Ω–µ –Ω–∞—à–µ–ª –≤ —Å–ø–∏—Å–∫–µ —Ç–≤–æ–∏—Ö –æ–±—å—è–≤–ª–µ–Ω–∏–π —Ç–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.'
            bot.send_message(message.chat.id, t)

    # --------------------------------------–§–£–ù–ö–¶–ò–Ø –î–õ–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø---------------------------------------------
    def send_push(message):
        u1_id = message.from_user.id
        # cursor.execute('SELECT user_region FROM user WHERE user_id = ?',
        #                (u1_id,))
        # u1_region = cursor.fetchall()
        u1_region = user.select(user.user_region).where(user.user_id == u1_id).execute()
        # cursor.execute('SELECT chat_id FROM user WHERE user_registration = ? OR user_registration = ?',
        #                (1, 2))
        # u2_id = cursor.fetchall()
        u2_id = user.select(user.chat_id).where((user.user_registration == 1) | (user.user_registration == 2)).execute()
        if u2_id and u1_region:
            for x in u2_id:
                # cursor.execute('SELECT search_message FROM user WHERE user_id = ?',
                #                (x[0],))
                # region_lst = cursor.fetchall()
                region_lst = user.select(user.search_message).where(user.user_id == x.chat_id).execute()
                if region_lst:
                    if u1_region[0].user_region in region_lst[0].search_message:
                        # if u1_region[0][0] in region_lst[0][0]:
                        #     cursor.execute('SELECT * FROM search_obj WHERE id = (SELECT MAX(id) FROM search_obj '
                        #                    'WHERE u_id = ?)', (u1_id,))
                        #     result = cursor.fetchone()
                        m = search_obj.select(fn.max(search_obj.id)).where(search_obj.u_id == u1_id)
                        try:
                            result = search_obj.select().where(search_obj.id == m).get()

                            bot.send_message(x.chat_id,
                                             "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\n{} - —Å—Ä–æ—á–Ω–æ –∏—â–µ—Ç –∫–æ–µ-—á—Ç–æ üî•\n\n"
                                             "–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n\n"
                                             .format(result.u_name, result.obj_name, result.obj_comment), timeout=10)
                            # .format(result[4], result[2], result[3]))
                        except Exception as e:
                            print(e)
        else:
            return 0

    # ----------------------------------------–§–£–ù–ö–¶–ò–ò –í–ï–¢–ö–ò –°–¨–ï–ú------------------------------------------------

    def search_cat1(message, category):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        all_search = ['–≤—Å–µ', '–≤—Å—ë', '–≤—Å–µ –æ–±—å—è–≤–ª–µ–Ω–∏—è', '–≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', '–æ–±—å—è–≤–ª–µ–Ω–∏—è', '–æ–±—å—è–≤–ª–µ–Ω–∏–µ', '–æ–±—ä—è–≤–ª–µ–Ω–∏—è',
                      '–æ–±—ä—è–≤–ª–µ–Ω–∏–µ', '–æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤—Å–µ', '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ', '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—ë', 'all']
        if message.text.lower() in all_search:
            return look_obj(message, category)
        u_text = message.text
        u_id = message.from_user.id
        cat = '{}'.format(category)
        # cursor.execute("SELECT user_region FROM user WHERE user_id = ?", (u_id,))
        # u_region = cursor.fetchone()
        u_r = user.get(user.user_id == u_id)

        # cursor.execute("SELECT * FROM 'obj' WHERE "
        #                "cat_1 IS NOT NULL AND name_cat1_obj IS NOT NULL AND photo IS NOT NULL "
        #                "AND category = ? AND region = ?", (cat, u_region[0],))
        # result = cursor.fetchall()
        result = obj.select().where(
            (obj.cat_1.is_null(False)) &
            (obj.name_cat1_obj.is_null(False)) &
            (obj.photo.is_null(False)) &
            (obj.category == cat) &
            (obj.region == u_r.id))

        if u_text is not None and len(u_text) > 2 and u_text.isdigit() == 0:
            r = 0
            for x in result:
                # a = x[2]
                a = x.name_cat1_obj
                if u_text.lower() in a.lower():
                    bot.send_message(message.chat.id, '–°–º–æ—Ç—Ä–∏, —á—Ç–æ —è –Ω–∞—à–µ–ª!')
                    bot.send_photo(message.chat.id, x.photo, timeout=10)
                    bot.send_message(message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\n–¶–µ–Ω–∞: {}—Ä\n\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n\n–í–ª–∞–¥–µ–ª–µ—Ü: {}'
                                     .format(x.name_cat1_obj, x.money_cat1, x.cat_1, x.user_name))
                    r = r + 1
            if r != 0:
                t = '–ù–∞—à–µ–ª –ª–∏ —Ç—ã –Ω—É–∂–Ω–æ–µ –∏–ª–∏ –≤—Å–µ –Ω–µ —Ç–æ?\n\n‚ÄºÔ∏è –í–∞–∂–Ω–æ: –ø–µ—Ä–µ–¥ –∞—Ä–µ–Ω–¥–æ–π –∏–∑—É—á–∏ –ø—Ä–∞–≤–∏–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç ' \
                    '–∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: https://telegra.ph/Osnovy-bezopasnoj-sdelki-12-13'
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–ü–æ–¥—Ö–æ–¥–∏—Ç!', callback_data='2-1+')
                key2 = types.InlineKeyboardButton('–Ø –Ω–µ –Ω–∞—à—ë–ª, —á—Ç–æ –∏—Å–∫–∞–ª', callback_data='2-1-')
                markup.row(key1)
                markup.row(key2)
                bot.send_message(message.chat.id, t, reply_markup=markup)
            if r == 0:
                t = '–¢–∞–∫–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å?'
                markup = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton('–î–∞–≤–∞–π', callback_data='2-1---')
                key2 = types.InlineKeyboardButton('–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='2-1-++')
                markup.row(key1)
                markup.row(key2)
                bot.send_message(message.chat.id, t, reply_markup=markup)
        else:
            msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É:')
            bot.register_next_step_handler(msg, search_cat1, category)

    def search_obj_name(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        u_text = message.text
        u_id = message.from_user.id
        u_name = '@' + message.from_user.username
        date = (str(datetime.datetime.now().today()))[:16]
        if u_text is None:
            t = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É üòî'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_name)
        elif len(u_text) > 30 or u_text.isdigit() == 1:
            t = '–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –∫—Ä–∞—Ç–∫–æ üôè'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_name)
        elif len(u_text) > 2 and u_text.isdigit() == 0:
            # cursor.execute('SELECT user_region FROM user WHERE user_id = ?', (u_id,))
            # user_region = cursor.fetchone()[0]

            u = user.select(user.user_region).where(user.user_id == u_id).get()

            # cursor.execute('INSERT INTO search_obj (u_id, obj_name, u_name, region, datetime) VALUES (?, ?, ?, ?, ?)',
            #                (u_id, u_text, u_name, user_region, date))
            # conn.commit()
            ins = search_obj.insert({
                search_obj.u_id: u_id,
                search_obj.obj_name: u_text,
                search_obj.u_name: u_name,
                search_obj.region: u.user_region,
                search_obj.datetime: date
            }).execute()

            t = '–û—Ç–ª–∏—á–Ω–æ, –¥–æ–±–∞–≤—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ç–≤–æ–µ–º—É –æ–±—ä—è–≤–ª–µ–Ω–∏—é.\n–ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å —Ü–µ–Ω—É –∏ ' \
                '—Å—Ä–æ–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –∞—Ä–µ–Ω–¥–∞.'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_text)
        else:
            t = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É üòî'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_name)

    def search_obj_text(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        u_text = message.text
        u_id = message.from_user.id
        if u_text is not None and 2 < len(u_text) < 300 and u_text.isdigit() == 0:
            m = search_obj.select(fn.max(search_obj.id)).where(search_obj.u_id == u_id)
            # cursor.execute('UPDATE search_obj SET obj_comment = ? WHERE id = (SELECT MAX(id) FROM search_obj WHERE '
            #                'u_id = ?)',
            #                (u_text, u_id,))
            # conn.commit()
            search_obj.update({search_obj.obj_comment: u_text}).where(search_obj.id == m).execute()

            bot.send_message(message.chat.id, "–ò—Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä–∏–º –µ—â–µ —Ä–∞–∑! –°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–µ "
                                              "–æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É –Ω–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å: ",
                             parse_mode='html')
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–í—Å—ë –≤–µ—Ä–Ω–æ, –∑–∞–ø—É—Å–∫–∞–π –º–∞—à–∏–Ω—É!', callback_data='2-1-1')
            key2 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data='2-1-0')
            markup.row(key1)
            markup.row(key2)
            # cursor.execute('SELECT * FROM search_obj WHERE id = (SELECT MAX(id) FROM search_obj WHERE u_id = ?)',
            #                (u_id,))
            # result = cursor.fetchone()
            maxid = m.get()
            result = search_obj.get_by_id(maxid.max)

            reply = bot.send_message(message.chat.id,
                                     "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\n{} - —Å—Ä–æ—á–Ω–æ –∏—â–µ—Ç –∫–æ–µ-—á—Ç–æ üî•\n\n"
                                     "–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n\n"
                                     "–í—Å–µ –ª–∏ —è –ø–æ–Ω—è–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ —Ö–æ—á–µ—à—å "
                                     "—á—Ç–æ-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏?"
                                     .format(result.u_name, result.obj_name, result.obj_comment),
                                     reply_markup=markup)
            return reply
        else:
            t = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É üòî'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_text)

    def search_obj_name_edit(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        u_text = message.text
        u_id = message.from_user.id
        if u_text is None:
            t = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É üòî'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_name_edit)
        elif len(u_text) > 30 or u_text.isdigit() == 1:
            t = '–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –∫—Ä–∞—Ç–∫–æ üòî'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_name_edit)
        elif len(u_text) > 2 and u_text.isdigit() == 0:
            m = search_obj.select(fn.max(search_obj.id)).where(search_obj.u_id == u_id)
            search_obj.update({search_obj.obj_name: u_text}).where(search_obj.id == m).execute()
            # cursor.execute('UPDATE search_obj SET obj_name = ? WHERE id = (SELECT MAX(id) FROM '
            #                'search_obj WHERE u_id = ?)',
            #                (u_text, u_id,))
            # conn.commit()
            # cursor.execute('SELECT * FROM search_obj WHERE id = (SELECT MAX(id) FROM search_obj WHERE u_id = ?)',
            #                (u_id,))
            # result = cursor.fetchone()
            result = search_obj.select().where(search_obj.id == m).get()

            bot.send_message(message.chat.id, "–ò—Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä–∏–º –µ—â–µ —Ä–∞–∑! –°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–µ "
                                              "–æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É –Ω–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å: ",
                             parse_mode='html')
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–í—Å—ë –≤–µ—Ä–Ω–æ, –∑–∞–ø—É—Å–∫–∞–π –º–∞—à–∏–Ω—É!', callback_data='2-1-1')
            key2 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data='2-1-0')
            markup.row(key1)
            markup.row(key2)
            reply = bot.send_message(message.chat.id,
                                     "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\n{} - —Å—Ä–æ—á–Ω–æ –∏—â–µ—Ç –∫–æ–µ-—á—Ç–æ üî•\n\n"
                                     "–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n\n"
                                     "–í—Å–µ –ª–∏ —è –ø–æ–Ω—è–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ —Ö–æ—á–µ—à—å "
                                     "—á—Ç–æ-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏?"
                                     .format(result.u_name, result.obj_name, result.obj_comment),
                                     reply_markup=markup)
            return reply
        else:
            t = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É üòî'
            msg = bot.send_message(message.chat.id, t)
            bot.register_next_step_handler(msg, search_obj_name_edit)

    # ----------------------------------------–§–£–ù–ö–¶–ò–ò –í–ï–¢–ö–ò –°–î–ê–¢–¨-----------------------------------------------
    # ----------------------------------------–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –û–ë–¨–Ø–í–õ–ï–ù–ò–Ø-----------------------------------------
    def update_name_obj(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        name_cat1_obj = message.text
        u_obj_id = message.from_user.id
        if name_cat1_obj.isdigit() == 0:
            m = obj.select(fn.max(obj.id)).where(obj.u_id == u_obj_id)
            obj.update({obj.name_cat1_obj: name_cat1_obj}).where(obj.id == m).execute()
            # cursor.execute('UPDATE obj SET name_cat1_obj = ? WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)',
            #                (name_cat1_obj, u_obj_id,))
            # conn.commit()
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data='01-1')
            key2 = types.InlineKeyboardButton('–í—Å—ë –û–ö!', callback_data='01')
            markup.row(key1)
            markup.row(key2)

            # cursor.execute('SELECT * FROM obj WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)', (u_obj_id,))
            # result = cursor.fetchone()
            result = obj.select().where(obj.id == m).get()

            bot.send_message(message.chat.id, "–ò—Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä–∏–º –µ—â–µ —Ä–∞–∑! –°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–µ "
                                              "–æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É –Ω–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å: ",
                             parse_mode='html')
            reply = bot.send_message(message.chat.id,
                                     "–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n–¶–µ–Ω–∞: {}—Ä\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n–í–ª–∞–¥–µ–ª–µ—Ü: {}\n"
                                     "–í—Å–µ –ª–∏ —è –ø–æ–Ω—è–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ —Ö–æ—á–µ—à—å "
                                     "—á—Ç–æ-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏?"
                                     .format(result.name_cat1_obj, result.money_cat1, result.cat_1, result.user_name),
                                     reply_markup=markup)
            return reply
        else:
            msg = bot.send_message(message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ —Ü–∏—Ñ—Ä. –£–∫–∞–∂–∏ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:')
            bot.register_next_step_handler(msg, update_name_obj)

    def update_money_obj(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        money_cat1 = message.text
        u_obj_id = message.from_user.id
        if money_cat1.isdigit() == 1:
            m = obj.select(fn.max(obj.id)).where(obj.u_id == u_obj_id)
            obj.update({obj.money_cat1: money_cat1}).where(obj.id == m).execute()
            # cursor.execute('UPDATE obj SET money_cat1 = ? WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)',
            #                (money_cat1, u_obj_id,))
            # conn.commit()
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data='01-1')
            key2 = types.InlineKeyboardButton('–í—Å—ë –û–ö!', callback_data='01')
            markup.row(key1)
            markup.row(key2)

            # cursor.execute('SELECT * FROM obj WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)', (u_obj_id,))
            # result = cursor.fetchone()
            result = obj.select().where(obj.id == m).get()

            bot.send_message(message.chat.id, "–ò—Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä–∏–º –µ—â–µ —Ä–∞–∑! –°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–µ "
                                              "–æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É –Ω–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å: ",
                             parse_mode='html')
            reply = bot.send_message(message.chat.id,
                                     "–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n–¶–µ–Ω–∞: {}—Ä\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n–í–ª–∞–¥–µ–ª–µ—Ü: {}\n"
                                     "–í—Å–µ –ª–∏ —è –ø–æ–Ω—è–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ —Ö–æ—á–µ—à—å "
                                     "—á—Ç–æ-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏?"
                                     .format(result.name_cat1_obj, result.money_cat1, result.cat_1, result.user_name),
                                     reply_markup=markup)
            return reply
        else:
            msg = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏ —Ü–µ–Ω—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 100 ')
            bot.register_next_step_handler(msg, update_money_obj)

    def update_text_obj(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        cat_1 = message.text
        u_obj_id = message.from_user.id
        if len(cat_1) > 10 and cat_1.isdigit() == 0:
            m = obj.select(fn.max(obj.id)).where(obj.u_id == u_obj_id)
            # cursor.execute('UPDATE obj SET cat_1 = ? WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)',
            #                (cat_1, u_obj_id,))
            # conn.commit()
            obj.update({obj.cat_1: cat_1}).where(obj.id == m).execute()
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data='01-1')
            key2 = types.InlineKeyboardButton('–í—Å—ë –û–ö!', callback_data='01')
            markup.row(key1)
            markup.row(key2)

            # cursor.execute('SELECT * FROM obj WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)', (u_obj_id,))
            # result = cursor.fetchone()
            result = obj.select().where(obj.id == m).get()

            bot.send_message(message.chat.id, "–ò—Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä–∏–º –µ—â–µ —Ä–∞–∑! –°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–µ "
                                              "–æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É –Ω–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å: ",
                             parse_mode='html')
            reply = bot.send_message(message.chat.id,
                                     "–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n–¶–µ–Ω–∞: {}—Ä\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n–í–ª–∞–¥–µ–ª–µ—Ü: {}\n"
                                     "–í—Å–µ –ª–∏ —è –ø–æ–Ω—è–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ —Ö–æ—á–µ—à—å "
                                     "—á—Ç–æ-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏?"
                                     .format(result.name_cat1_obj, result.money_cat1, result.cat_1, result.user_name),
                                     parse_mode='html', reply_markup=markup)
            return reply
        else:
            msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ ;)')
            bot.register_next_step_handler(msg, update_text_obj)

    def update_photo_obj(message):
        if message.content_type == 'photo':
            photo = message.photo[0].file_id
            u_obj_id = message.from_user.id
            m = obj.select(fn.max(obj.id)).where(obj.u_id == u_obj_id)
            obj.update({
                obj.photo: photo
            }).where(obj.id == m).execute()
            # cursor.execute('UPDATE obj SET photo = ? WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)',
            #                (photo, u_obj_id,))
            # conn.commit()
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data='01-1')
            key2 = types.InlineKeyboardButton('–í—Å—ë –û–ö!', callback_data='01')
            markup.row(key1)
            markup.row(key2)

            # cursor.execute('SELECT * FROM obj WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)', (u_obj_id,))
            # result = cursor.fetchone()
            result = obj.select().where(obj.id == m).get()

            bot.send_message(message.chat.id, "–ò—Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä–∏–º –µ—â–µ —Ä–∞–∑! –°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–µ "
                                              "–æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É –Ω–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å: ",
                             parse_mode='html')
            bot.send_photo(message.chat.id, result.photo)
            reply = bot.send_message(message.chat.id,
                                     "–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n–¶–µ–Ω–∞: {}—Ä\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n–í–ª–∞–¥–µ–ª–µ—Ü: {}\n"
                                     "–í—Å–µ –ª–∏ —è –ø–æ–Ω—è–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ —Ö–æ—á–µ—à—å "
                                     "—á—Ç–æ-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏?"
                                     .format(result.name_cat1_obj, result.money_cat1, result.cat_1, result.user_name),
                                     parse_mode='html', reply_markup=markup)
            return reply
        else:
            if check_stop_text(message):
                t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
                return main_menu(message, t)
            msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞! –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å–æ —Å–∂–∞—Ç–∏–µ–º, 1—à—Ç.')
            bot.register_next_step_handler(msg, update_photo_obj)

    # ----------------------------------------–°–û–ó–î–ê–ù–ò–ï –û–ë–¨–Ø–í–õ–ï–ù–ò–Ø---------------------------------------------------
    def init_name_obj(message, z):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        category = '{}'.format(z)
        user_name = '@' + message.from_user.username
        u_text = message.text
        u_obj_id = message.from_user.id
        date = (str(datetime.datetime.now().today()))[:16]
        # cursor.execute('SELECT user_region FROM user WHERE user_id = ?', (u_obj_id,))
        # user_region = cursor.fetchone()
        u = user.get_or_none(user.user_id == u_obj_id)
        if u_text is None:
            msg = bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ.!')
            bot.register_next_step_handler(msg, init_name_obj, z)
        elif u_text.isdigit() == 0 and len(u_text) > 2:
            # cursor.execute('INSERT INTO obj (u_id, name_cat1_obj, user_name, category, region, datetime) '
            #                'VALUES (?, ?, ?, ?, ?, ?)',
            #                (u_obj_id, u_text, user_name, category, user_region[0], date))
            # conn.commit()
            obj.insert({
                obj.u_id: u_obj_id,
                obj.name_cat1_obj: u_text,
                obj.user_name: user_name,
                obj.category: category,
                obj.region: u.user_region,
                obj.datetime: date
            }).execute()
            msg = bot.send_message(message.chat.id, '–ü–æ–Ω—è–ª —Ç–µ–±—è. –î–∞–≤–∞–π —Ç–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —Ü–µ–Ω–æ–π. '
                                                    '–ö–∞–∫—É—é —Å—É–º–º—É –∑–∞ —Å—É—Ç–∫–∏ –∞—Ä–µ–Ω–¥—ã —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∏—Ç—å?',
                                   parse_mode='html')
            bot.register_next_step_handler(msg, init_money_obj)
        else:
            msg = bot.send_message(message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞. –£–∫–∞–∂–∏ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:')
            bot.register_next_step_handler(msg, init_name_obj, z)

    def init_money_obj(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        u_obj_money = message.text
        u_obj_id = message.from_user.id
        if u_obj_money is not None and u_obj_money.isdigit():
            m = obj.select(fn.max(obj.id)).where(obj.u_id == u_obj_id)
            obj.update({
                obj.money_cat1: u_obj_money
            }).where(obj.id == m).execute()
            # cursor.execute('UPDATE obj SET money_cat1 = ? WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)',
            #                (u_obj_money, u_obj_id,))
            # conn.commit()
            msg = bot.send_message(message.chat.id, '–ó–∞–ø–∏—Å–∞–Ω–æ! –î–æ–±–∞–≤—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –µ—â–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞, '
                                                    '—á—Ç–æ–±—ã —É —Å–æ—Å–µ–¥–µ–π –Ω–µ –≤–æ–∑–Ω–∏–∫–∞–ª–æ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ (–º–æ–¥–µ–ª—å, —Ä–∞–∑–º–µ—Ä, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –¥—Ä—É–≥–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏). '
                                                    '–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π)',
                                   parse_mode='html')
            bot.register_next_step_handler(msg, init_photo_obj)
        else:
            msg = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏ —Ü–µ–Ω—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 100 ')
            bot.register_next_step_handler(msg, init_money_obj)

    def init_photo_obj(message):
        if check_stop_text(message):
            t = '–í–æ–∑–≤—Ä–∞—â–∞—é –º–µ–Ω—é...'
            return main_menu(message, t)
        u_obj = message.text
        u_obj_id = message.from_user.id
        if u_obj is None:
            msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ ;)')
            bot.register_next_step_handler(msg, init_photo_obj)
        elif len(u_obj) > 10 and u_obj.isdigit() == 0:
            m = obj.select(fn.max(obj.id)).where(obj.u_id == u_obj_id)
            q = obj.update({obj.cat_1: u_obj}).where(obj.id == m).execute()

            # cursor.execute('UPDATE obj SET cat_1 = ? WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)',
            #                (u_obj, u_obj_id,))
            # conn.commit()
            msg = bot.send_message(message.chat.id, '–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ, –ø—Ä–∏–∫—Ä–µ–ø–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å–≤–æ–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞. '
                                                    '–≠—Ç–æ –ø–æ—á—Ç–∏ –∫–∞–∫ –¢–∏–Ω–¥–µ—Ä - –±–µ–∑ —Ñ–æ—Ç–∫–∏ –Ω–∏–∫—É–¥–∞.\n\n–ï—Å–ª–∏ —Å–µ–π—á–∞—Å –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ, —Ç–æ –≤–æ–∑—å–º–∏ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.\n‚ÄºÔ∏è –ë–µ–∑ —Ñ–æ—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ ‚ÄºÔ∏è',
                                   parse_mode='html')
            bot.register_next_step_handler(msg, init_obj)
        else:
            msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ ;)')
            bot.register_next_step_handler(msg, init_photo_obj)

    def init_obj(message):
        if message.content_type == 'photo':
            u_obj_photo = message.photo[0].file_id
            u_obj_id = message.from_user.id
            #####################
            m = obj.select(fn.max(obj.id)).where(obj.u_id == u_obj_id)
            obj.update({
                obj.photo: u_obj_photo
            }).where(obj.id == m).execute()
            ################################### –ü–æ–ø—Ä–∞–≤–∏—Ç—å –ë–î
            # cursor.execute('UPDATE obj SET photo = ? WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)',
            #                (u_obj_photo, u_obj_id,))
            # conn.commit()

            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data='01-1')
            key2 = types.InlineKeyboardButton('–í—Å—ë –û–ö!', callback_data='01')
            markup.row(key1)
            markup.row(key2)

            m = obj.select(fn.max(obj.id)).where(obj.u_id == u_obj_id)
            result = obj.select().where(obj.id == m).get_or_none()
            # cursor.execute('SELECT * FROM obj WHERE id = (SELECT MAX(id) FROM obj WHERE u_id = ?)', (u_obj_id,))
            # result = cursor.fetchone()

            bot.send_message(message.chat.id, "–ò—Ç–∞–∫, —Å–æ—Å–µ–¥, –º—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å! –°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–µ "
                                              "–æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É –Ω–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å: ",
                             parse_mode='html', timeout=10)
            bot.send_photo(message.chat.id, result.photo)
            reply = bot.send_message(message.chat.id,
                                     "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {}\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n–¶–µ–Ω–∞:{}—Ä\n–û–ø–∏—Å–∞–Ω–∏–µ: {}\n–í–ª–∞–¥–µ–ª–µ—Ü: {}\n"
                                     "–í—Å–µ –ª–∏ —è –ø–æ–Ω—è–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ —Ö–æ—á–µ—à—å "
                                     "—á—Ç–æ-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏?".format(result.category, result.name_cat1_obj,
                                                                             result.money_cat1, result.cat_1,
                                                                             result.user_name),
                                     parse_mode='html', reply_markup=markup, timeout=10)
            return reply
        else:
            print(message)
            msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞! –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å–æ —Å–∂–∞—Ç–∏–µ–º, 1—à—Ç.', timeout=10)
            bot.register_next_step_handler(msg, init_obj)

    # ---------------------------------------–§—É–Ω–∫–∏—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª-–≤–∞ –æ–±—å—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏------------------------------

    # ------------------------------------------------------------------------------------------------------------------

    # ----------------------------------------–û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–ö–°–¢–û–í–´–• –°–û–û–ë–©–ï–ù–ò–ô/–ú–ï–ù–Æ----------------------------------------
    @bot.message_handler(content_types=['text'])
    def process_start_command(message):
        if message.text == '–°–¥–∞—Ç—å':
            t = '–ó–¥–æ—Ä–æ–≤–æ, —á—Ç–æ —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å —á—Ç–æ-—Ç–æ –≤ –∞—Ä–µ–Ω–¥—É! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. ' \
                '–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –±—ã —Ö–æ—Ç–µ–ª —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É. –í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ:'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ',
                                              callback_data='1-1')
            key2 = types.InlineKeyboardButton('–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞',
                                              callback_data='1-2')
            key3 = types.InlineKeyboardButton('–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏',
                                              callback_data='1-3')
            key4 = types.InlineKeyboardButton(
                '–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
                callback_data='1-4')
            key5 = types.InlineKeyboardButton('–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å',
                                              callback_data='1-5')
            key6 = types.InlineKeyboardButton('–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã',
                                              callback_data='1-6')
            key7 = types.InlineKeyboardButton('–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
                                              callback_data='1-7')
            key8 = types.InlineKeyboardButton('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
                                              callback_data='1-8')
            key9 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞',
                                              callback_data='1-9')
            key10 = types.InlineKeyboardButton('–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏',
                                               callback_data='1-10')
            key11 = types.InlineKeyboardButton('–ü—Ä–æ—á–µ–µ', callback_data='1-11')
            key12 = types.InlineKeyboardButton('–í—ã–π—Ç–∏ –≤ –ú–ï–ù–Æ', callback_data='menu')
            markup.row(key12)
            markup.row(key1)
            markup.row(key2)
            markup.row(key3)
            markup.row(key4)
            markup.row(key5)
            markup.row(key6)
            markup.row(key7)
            markup.row(key8)
            markup.row(key9)
            markup.row(key10)
            markup.row(key11)
            bot.send_message(message.chat.id, t, parse_mode='html', reply_markup=markup, timeout=10)

        if message.text == '–°–Ω—è—Ç—å':
            u_id = message.from_user.id
            t = '–ü–æ–Ω—è–ª —Ç–µ–±—è, –∞—Ä–µ–Ω–¥—É–µ–º! –£–∂–µ –≤—Å–ø–æ–º–∏–Ω–∞–Ω–∏—é –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ç–≤–æ–∏—Ö —Å–æ—Å–µ–¥–µ–π! ' \
                '–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω—É–∂–Ω—ã–π —Ç–µ–±–µ –ø—Ä–µ–¥–º–µ—Ç.'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ {}'.format(how_many_obj('–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ', u_id)),
                                              callback_data='2-1')
            key2 = types.InlineKeyboardButton('–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞ {}'.format(how_many_obj('–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–æ–º–∞', u_id)),
                                              callback_data='2-2')
            key3 = types.InlineKeyboardButton('–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏ {}'.format(how_many_obj('–ò–≥—Ä—ã –∏ –∫–æ–Ω—Å–æ–ª–∏', u_id)),
                                              callback_data='2-3')
            key4 = types.InlineKeyboardButton(
                '–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è {}'.format(how_many_obj('–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', u_id)),
                callback_data='2-4')
            key5 = types.InlineKeyboardButton('–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å {}'.format(how_many_obj('–î–µ–∫–æ—Ä –∏ –º–µ–±–µ–ª—å', u_id)),
                                              callback_data='2-5')
            key6 = types.InlineKeyboardButton('–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã {}'.format(how_many_obj('–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã', u_id)),
                                              callback_data='2-6')
            key7 = types.InlineKeyboardButton('–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π {}'.format(how_many_obj('–î–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π', u_id)),
                                              callback_data='2-7')
            key8 = types.InlineKeyboardButton('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã {}'.format(how_many_obj('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', u_id)),
                                              callback_data='2-8')
            key9 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞ {}'.format(how_many_obj('–¢–æ–≤–∞—Ä—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞', u_id)),
                                              callback_data='2-9')
            key10 = types.InlineKeyboardButton('–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏ {}'.format(how_many_obj('–ú—É–∑—ã–∫–∞ –∏ —Ö–æ–±–±–∏', u_id)),
                                               callback_data='2-10')
            key11 = types.InlineKeyboardButton('–ü—Ä–æ—á–µ–µ {}'.format(how_many_obj('–ü—Ä–æ—á–µ–µ', u_id)), callback_data='2-11')
            key13 = types.InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø–æ–∏—Å–∫–µ', callback_data='search')
            key12 = types.InlineKeyboardButton('–í—ã–π—Ç–∏ –≤ –ú–ï–ù–Æ', callback_data='menu')
            markup.row(key12)
            markup.row(key13)
            markup.row(key1)
            markup.row(key2)
            markup.row(key3)
            markup.row(key4)
            markup.row(key5)
            markup.row(key6)
            markup.row(key7)
            markup.row(key8)
            markup.row(key9)
            markup.row(key10)
            markup.row(key11)
            bot.send_message(message.chat.id, t, parse_mode='html', reply_markup=markup, timeout=10)

        if message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –æ–±—å—è–≤–ª–µ–Ω–∏—è':
            t = '–ö–∞–∫–∏–µ –æ–±—å—è–≤–ª–µ–Ω–∏—è —Å–º–æ—Ç—Ä–∏–º?'
            markup = types.InlineKeyboardMarkup()
            key1 = types.InlineKeyboardButton('–ß—Ç–æ —è —Å–¥–∞—é?', callback_data='3-1-1')
            key2 = types.InlineKeyboardButton('–ß—Ç–æ —è –∏—â—É –≤ –∞—Ä–µ–Ω–¥—É?', callback_data='3-1-2')
            markup.row(key1)
            markup.row(key2)
            bot.send_message(message.chat.id, t, reply_markup=markup, timeout=10)

        if message.text == '–ú–µ–Ω—é':
            t = '–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é'
            main_menu(message, t)

    # ------------------------------------------------------------------------------------------------------------------

    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            print(e)
            time.sleep(15)

    # bot.polling(none_stop=True, timeout=150)
    # bot.infinity_polling()


if __name__ == "__main__":
    try:
        main()
    finally:
        psql_db.close()
